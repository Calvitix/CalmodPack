######################################
#									#
# Nemesis Become the Crisis Events #
#	 Written by Douglas Furen		#
#									#
######################################

namespace = crisis

# Crack Star Event
planet_event = {
	id = crisis.4550
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		add_threat = { who = from.owner amount = 10 }
		from = {
			owner = {
				save_event_target_as = crisis_country
				add_victory_score = {
					source = destroyed_stars_score
					score = 10
				}
				switch = {
					trigger = galaxy_size
					huge = { add_resource = { sr_dark_matter = 1000 } }
					large = { add_resource = { sr_dark_matter = 1500 } }
					medium = { add_resource = { sr_dark_matter = 2000 } }
					small = { add_resource = { sr_dark_matter = 2500 } }
					tiny = { add_resource = { sr_dark_matter = 3000 } }
				}
				if = {
					limit = {
						NOT = { has_country_flag = cracked_first_star }
					}
					set_country_flag = cracked_first_star
				}
				if = {
					limit = {
						NOT = { has_country_flag = tried_awaken_guardian_player_crisis }
						OR = {
							fleet_power > 60000
							any_owned_planet = { has_planet_flag = fallen_empire_world }
						}
					}
					set_country_flag = tried_awaken_guardian_player_crisis
					awaken_guardians_of_the_galaxy = yes
				}
			}
		}
		solar_system = { save_event_target_as = destroyed_system }
		every_playable_country = {
			limit = {
				is_ai = no
				has_communications = event_target:crisis_country
				NOR = {
					is_same_value = event_target:crisis_country
					has_country_flag = can_build_star_eaters
					has_country_flag = star_eater_alert@event_target:crisis_country
				}
				intel_level = {
					system = event_target:destroyed_system
					level = none
				}
			}
			country_event = { id = crisis.6180 }
		}
		every_playable_country = {
			limit = {
				is_ai = no
				has_communications = event_target:crisis_country
				NOR = {
					is_same_value = event_target:crisis_country
					has_country_flag = can_build_star_eaters
					has_country_flag = star_eater_alert@event_target:crisis_country
				}
				intel_level = {
					system = event_target:destroyed_system
					level > none
				}
			}
			country_event = { id = crisis.6181 }
		}
		every_playable_country = {
			limit = {
				is_ai = no
				has_communications = event_target:crisis_country
				NOR = {
					is_same_value = event_target:crisis_country
					has_country_flag = star_eater_alert@event_target:crisis_country
				}
				has_country_flag = can_build_star_eaters
			}
			country_event = { id = crisis.6182 }
		}
		every_playable_country = {
			limit = {
				has_communications = event_target:crisis_country
				NOT = {
					has_opinion_modifier = {
						who = event_target:crisis_country
						modifier = opinion_destroying_systems
					}
				}
			}
			add_opinion_modifier = {
				who = event_target:crisis_country
				modifier = opinion_destroying_systems
			}
		}
		solar_system = {
			if = {
				limit = {
					any_country = {
						has_ai_personality_behaviour = holy_planets # not awakened
						NOT = { is_at_war_with = from.from.owner }
					}
					any_system_planet = { has_modifier = holy_planet }
				}
				random_country = {
					limit = {
						has_ai_personality_behaviour = holy_planets # not awakened
						NOT = { is_at_war_with = from.owner }
					}
					save_event_target_as = outraged_FE
				}
				random_system_planet = {
					limit = { has_modifier = holy_planet }
					save_event_target_as = blown_up_holy_world
				}
				from.owner = {
					save_event_target_as = FE_outrager
					country_event = {
						id = planet_destruction.610
						days = 5
						scopes = { from = event_target:blown_up_holy_world }
					}
				}
			}
			destroy_star_system = yes
		}
	}
}

# Engine - Third Stage Complete
country_event = {
	id = crisis.6007
	title = "crisis.6005.name"
	desc = "crisis.6007.desc"
	picture = GFX_evt_space_monster
	show_sound = event_default

	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = { has_star_flag = crisis_sphere_system@root }
			random_system_ambient_object = {
				limit = { has_ambient_object_flag = crisis_sphere_2_system_effect }
				destroy_ambient_object = this
			}
			star = {
				create_ambient_object = {
					type = "crisis_sphere_3"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = crisis_sphere_3_system_effect
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
		}
		awaken_guardians_of_the_galaxy = yes
	}

	option = {
		name = crisis.6007.a
	}
}