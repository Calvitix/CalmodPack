namespace = z_performance

#_game start
event = {
	id = z_performance.12
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = z_performance_installed	#_mod activited
		set_global_flag = z_performance_start		#_tips check
		
		set_global_flag = z_performance_always		#_default
		set_global_flag = z_pf_uep_check_disabled
		set_global_flag = z_pf_pop_degrade_noai
		
		every_country = { country_event = { id = z_performance.10  days = 45 random = 5  } }
	}
}
###_万用初始化
country_event = {
	id = z_performance.101
	hide_window = yes
	fire_only_once = yes
	trigger = { is_ai = no }
	mean_time_to_happen = { days = 23 }
	
	immediate = {
		if = {
			limit = { NOT = { has_global_flag = z_performance_installed } }
			set_global_flag = z_performance_installed
			set_global_flag = z_performance_start
			
			set_global_flag = z_performance_always
			remove_global_flag = z_performance_high
			remove_global_flag = z_performance_mid
			remove_global_flag = z_performance_low
			remove_global_flag = z_performance_never
			set_global_flag = z_pf_uep_check_disabled
			set_global_flag = z_pf_pop_degrade_noai
			every_country = { country_event = { id = z_performance.10  days = 45 random = 5  } }
		}
	}
}




#_tips after beginning
country_event = {
	id = z_performance.10
	title = z_performance_start_title
	desc = z_performance_start_title_desc
	picture = GFX_evt_z_performance
	is_triggered_only = yes
	
	trigger = {
		is_ai = no
		has_global_flag = z_performance_start
	}
	immediate = { remove_global_flag = z_performance_start }
	
	#_optimization
	option = {
		name = z_performance.10.a
		custom_tooltip = z_performance.10.a.tooltip
		hidden_effect = {
			remove_global_flag = z_performance_always
			set_global_flag = z_performance_high
			remove_global_flag = z_pf_uep_check_disabled
		}
	}
	#_no optimization
	option = {
		name = z_performance.10.b
		custom_tooltip = z_performance.10.b.tooltip
	}
}



#_z_modmenu
country_event = {
	id = z_performance.11
	title = z_performance_title
	desc = z_performance_title_desc
	picture = GFX_evt_z_performance
	is_triggered_only = yes
	
	immediate = {
		if = {#_initialization
			limit = { NOT = { has_global_flag = z_performance_installed } }
			set_global_flag = z_performance_installed
		}
		if = {
			limit = { has_global_flag = z_performance_start }
			remove_global_flag = z_performance_start
		}
		set_variable = { which = z_galaxy_pop_var value = 0 }
		set_variable = { which = z_galaxy_pop_unemployed_var value = 0 }
		every_country = {
			limit = { num_pops > 0 }
			every_owned_pop = {
				if = {
					limit = { is_unemployed = yes }
					ROOT = {
						change_variable = { which = z_galaxy_pop_var value = 1 }
						change_variable = { which = z_galaxy_pop_unemployed_var value = 1 }
					}
				}
				else = {
					ROOT = { change_variable = { which = z_galaxy_pop_var value = 1 } }
				}
			}
		}
	}
	after = {
		hidden_effect = {
			set_variable = { which = z_galaxy_pop_var value = 0 }
			set_variable = { which = z_galaxy_pop_unemployed_var value = 0 }
		}
	}

	#_vanilla
	option = {
		name = z_performance.11.a
		custom_tooltip = z_performance.11.a.tooltip
		trigger = { has_global_flag = z_performance_always }
		hidden_effect = {
			remove_global_flag = z_performance_always
			set_global_flag = z_performance_high
			
			country_event = { id = z_performance.11 }
		}
	}
	#_high
	option = {
		name = z_performance.11.b
		custom_tooltip = z_performance.11.b.tooltip
		trigger = { has_global_flag = z_performance_high }
		hidden_effect = {
			remove_global_flag = z_performance_high
			set_global_flag = z_performance_mid
			
			country_event = { id = z_performance.11 }
		}
	}
	#_mid
	option = {
		name = z_performance.11.c
		custom_tooltip = z_performance.11.c.tooltip
		trigger = { has_global_flag = z_performance_mid }
		hidden_effect = {
			
			remove_global_flag = z_performance_mid
			set_global_flag = z_performance_low
			
			country_event = { id = z_performance.11 }
		}
	}
	#_low
	option = {
		name = z_performance.11.e
		custom_tooltip = z_performance.11.e.tooltip
		trigger = { has_global_flag = z_performance_low }
		hidden_effect = {
			remove_global_flag = z_performance_low
			set_global_flag = z_performance_always
			
			country_event = { id = z_performance.11 }
		}
	}
	
	#_uep check
	option = {
		name = z_performance.11.j1
		custom_tooltip = z_performance.11.j1.tooltip
		trigger = { has_global_flag = z_pf_uep_check_disabled }
		hidden_effect = {
			remove_global_flag = z_pf_uep_check_disabled
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.j2
		custom_tooltip = z_performance.11.j2.tooltip
		trigger = { NOT = { has_global_flag = z_pf_uep_check_disabled } }
		hidden_effect = {
			set_global_flag = z_pf_uep_check_disabled
			country_event = { id = z_performance.11 }
		}
	}
	
	#_degrade
	option = {
		name = z_performance.11.i1
		custom_tooltip = z_performance.11.i1.tooltip
		trigger = { has_global_flag = z_pf_pop_degrade }
		hidden_effect = {
			remove_global_flag = z_pf_pop_degrade
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.i2
		custom_tooltip = z_performance.11.i2.tooltip
		trigger = {
			NOR = {
				has_global_flag = z_pf_pop_degrade
				has_global_flag = z_pf_pop_degrade_noai
			}
		}
		hidden_effect = {
			set_global_flag = z_pf_pop_degrade_noai
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.i3
		custom_tooltip = z_performance.11.i3.tooltip
		trigger = { has_global_flag = z_pf_pop_degrade_noai }
		hidden_effect = {
			remove_global_flag = z_pf_pop_degrade_noai
			set_global_flag = z_pf_pop_degrade
			country_event = { id = z_performance.11 }
		}
	}
	
	#_handle excess pops-AI
	option = {
		name = z_performance.11.k1
		custom_tooltip = z_performance.11.k1.tooltip
		trigger = {
			NOR = {
				has_global_flag = z_pf_excess_ai_resettle
				has_global_flag = z_pf_excess_ai_resettle_kill
				has_global_flag = z_pf_excess_ai_kill
			}
		}
		hidden_effect = {
			set_global_flag = z_pf_excess_ai_resettle
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.k2
		custom_tooltip = z_performance.11.k2.tooltip
		trigger = { has_global_flag = z_pf_excess_ai_resettle }
		hidden_effect = {
			remove_global_flag = z_pf_excess_ai_resettle
			set_global_flag = z_pf_excess_ai_resettle_kill
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.k3
		custom_tooltip = z_performance.11.k3.tooltip
		trigger = { has_global_flag = z_pf_excess_ai_resettle_kill }
		hidden_effect = {
			remove_global_flag = z_pf_excess_ai_resettle_kill
			set_global_flag = z_pf_excess_ai_kill
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.k4
		custom_tooltip = z_performance.11.k4.tooltip
		trigger = { has_global_flag = z_pf_excess_ai_kill }
		hidden_effect = {
			remove_global_flag = z_pf_excess_ai_kill
			country_event = { id = z_performance.11 }
		}
	}
	
	#_handle excess pops-PC
	option = {
		name = z_performance.11.l1
		custom_tooltip = z_performance.11.l1.tooltip
		trigger = {
			NOR = {
				has_global_flag = z_pf_excess_pc_resettle
				has_global_flag = z_pf_excess_pc_resettle_kill
				has_global_flag = z_pf_excess_pc_kill
			}
		}
		hidden_effect = {
			set_global_flag = z_pf_excess_pc_resettle
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.l2
		custom_tooltip = z_performance.11.l2.tooltip
		trigger = { has_global_flag = z_pf_excess_pc_resettle }
		hidden_effect = {
			remove_global_flag = z_pf_excess_pc_resettle
			set_global_flag = z_pf_excess_pc_resettle_kill
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.l3
		custom_tooltip = z_performance.11.l3.tooltip
		trigger = { has_global_flag = z_pf_excess_pc_resettle_kill }
		hidden_effect = {
			remove_global_flag = z_pf_excess_pc_resettle_kill
			set_global_flag = z_pf_excess_pc_kill
			country_event = { id = z_performance.11 }
		}
	}
	option = {
		name = z_performance.11.l4
		custom_tooltip = z_performance.11.l4.tooltip
		trigger = { has_global_flag = z_pf_excess_pc_kill }
		hidden_effect = {
			remove_global_flag = z_pf_excess_pc_kill
			country_event = { id = z_performance.11 }
		}
	}
	
	#_handle excess pops-resettle cap
	option = {#_5
		name = z_performance.11.m1
		custom_tooltip = z_performance.11.m1.tooltip
		trigger = {
			NOR = {
				has_global_flag = z_pf_handle_excess_max_10
				has_global_flag = z_pf_handle_excess_max_20
			}
		}
		hidden_effect = {
			set_global_flag = z_pf_handle_excess_max_10
			country_event = { id = z_performance.11 }
		}
	}
	option = {#_10
		name = z_performance.11.m2
		custom_tooltip = z_performance.11.m2.tooltip
		trigger = { has_global_flag = z_pf_handle_excess_max_10 }
		hidden_effect = {
			remove_global_flag = z_pf_handle_excess_max_10
			set_global_flag = z_pf_handle_excess_max_20
			country_event = { id = z_performance.11 }
		}
	}
	option = {#_20
		name = z_performance.11.m3
		custom_tooltip = z_performance.11.m3.tooltip
		trigger = { has_global_flag = z_pf_handle_excess_max_20 }
		hidden_effect = {
			remove_global_flag = z_pf_handle_excess_max_20
			country_event = { id = z_performance.11 }
		}
	}
	
	
	#_restart
	option = {
		name = z_performance.11.f
		custom_tooltip = z_performance.11.f.tooltip
		trigger = { has_global_flag = z_performance_never }
		hidden_effect = {
			remove_global_flag = z_performance_never
			set_global_flag = z_performance_high
			
			country_event = { id = z_performance.11 }
		}
	}
	#_shut down
	option = {
		name = z_performance.11.f1
		custom_tooltip = z_performance.11.f1.tooltip
		trigger = { NOT = { has_global_flag = z_performance_never } }
		hidden_effect = {
			remove_global_flag = z_performance_always
			remove_global_flag = z_allow_job_check		#_全人口检测
			remove_global_flag = z_performance_high
			remove_global_flag = z_performance_mid
			remove_global_flag = z_performance_low
			set_global_flag = z_performance_never
			country_event = { id = z_performance.11 }
		}
	}
	
	#_Debug-default
	option = {
		name = z_performance.11.f2
		custom_tooltip = z_performance.11.f2.tooltip
		hidden_effect = {
			set_global_flag = z_performance_always
			remove_global_flag = z_performance_high
			remove_global_flag = z_performance_mid
			remove_global_flag = z_performance_low
			remove_global_flag = z_performance_never
			set_global_flag = z_pf_uep_check_disabled
			remove_global_flag = z_pf_pop_degrade
			set_global_flag = z_pf_pop_degrade_noai
			#_resettle
			remove_global_flag = z_pf_excess_ai_resettle
			remove_global_flag = z_pf_excess_ai_resettle_kill
			remove_global_flag = z_pf_excess_ai_kill
			remove_global_flag = z_pf_excess_pc_resettle
			remove_global_flag = z_pf_excess_pc_resettle_kill
			remove_global_flag = z_pf_excess_pc_kill
			remove_global_flag = z_pf_handle_excess_max_10
			remove_global_flag = z_pf_handle_excess_max_20
			country_event = { id = z_performance.11 }
		}
	}
	#_resettle best setting
	option = {
		name = z_performance.11.f3
		custom_tooltip = z_performance.11.f3.tooltip
		trigger = {
			NAND = {
				has_global_flag = z_pf_excess_ai_kill
				has_global_flag = z_pf_excess_pc_resettle
				has_global_flag = z_pf_handle_excess_max_10
			}
		}
		hidden_effect = {
			#_resettle
			remove_global_flag = z_pf_excess_ai_resettle
			remove_global_flag = z_pf_excess_ai_resettle_kill
			set_global_flag = z_pf_excess_ai_kill
			set_global_flag = z_pf_excess_pc_resettle
			remove_global_flag = z_pf_excess_pc_resettle_kill
			remove_global_flag = z_pf_excess_pc_kill
			set_global_flag = z_pf_handle_excess_max_10
			remove_global_flag = z_pf_handle_excess_max_20
			country_event = { id = z_performance.11 }
		}
	}
	
	#_back z_modmenu
	#option = {
	#	name = z_performance.11.g
	#	custom_tooltip = z_performance.11.g.tooltip
	#	hidden_effect = {
	#		country_event = { id = z_modmenu.1 }
	#	}
	#}
	#_cancel
	option = {
		z_mm_unlock_menu_button = yes		#_z mm
		name = z_performance.11.h
		custom_tooltip = z_performance.11.h.tooltip
	}
}








#_自循环全人口检测
planet_event = {
	id = z_performance.13
	hide_window = yes
	
	trigger = {
		is_colony = yes
		num_pops > 0
		free_jobs > 0		#_空闲职位
		NOT = { has_planet_flag = z_pf_automatic_checking_cd }		#_CD
		count_owned_pops = {#_无业人口
			count > 0
			limit = { is_unemployed = yes }
		}
		OR = {
			has_global_flag = z_performance_high
			has_global_flag = z_performance_mid
			has_global_flag = z_performance_low
		}
	}
	mean_time_to_happen = {
		months = 2
		#modifier = {
		#	factor = 2
		#	has_global_flag = z_performance_mid
		#}
		#modifier = {
		#	factor = 3
		#	has_global_flag = z_performance_low
		#}
	}
	
	immediate = {
		if = {
			limit = { has_global_flag = z_performance_high }
			set_timed_planet_flag = { flag = z_pf_automatic_checking_cd days = 75 }
		}
		else_if = {
			limit = { has_global_flag = z_performance_mid }
			set_timed_planet_flag = { flag = z_pf_automatic_checking_cd days = 150 }
		}
		else_if = {
			limit = { has_global_flag = z_performance_low }
			set_timed_planet_flag = { flag = z_pf_automatic_checking_cd days = 225 }
		}
		planet_event = { id = z_performance.131 days = 4 random = 3 }
	}
}
planet_event = {#_自动降级 添加检测trigger
	id = z_performance.131
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		z_pf_eft_pop_degrade = yes		#_degrade
		#add_deposit = z_pf_d_checker
		set_timed_planet_flag = { flag = z_pf_job_checker days = 2 }	#_full pops trigger
		planet_event = { id = z_performance.132 days = 1 }
	}
}
planet_event = {#_district 检测
	id = z_performance.132
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		add_district = {
			district_type = z_performance_checker
			ignore_cap = yes
		}
		#remove_deposit = z_pf_d_checker
		remove_district = z_performance_checker
		planet_event = { id = z_performance.133 days = 1 }
	}
}
planet_event = {#_handle excess pops
	id = z_performance.133
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		z_pf_eft_handle_excess = yes		#_excess
	}
}




#_失业人口检测 [人口增加/建筑变动]
planet_event = {
	id = z_performance.14
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_colony = yes
		num_pops > 0
		NOR = {
			has_planet_flag = z_pf_uep_checking_cd		#_CD
			free_jobs < 1		#_空职位
			count_owned_pops = {#_失业人口
				count = 0
				limit = { is_unemployed = yes }
			}
			has_global_flag = z_pf_uep_check_disabled	#_失业检测开关
		}
	}
	
	immediate = {
		z_pf_eft_pop_degrade = yes		#_degrade
		set_timed_planet_flag = { flag = z_pf_uep_checking_cd days = 10 }	#_CD
		#add_deposit = z_pf_d_checker_uep
		set_timed_planet_flag = { flag = z_pf_job_checker_uep days = 2 }	#_unemployed trigger
		planet_event = { id = z_performance.141 days = 1 }
	}
}
planet_event = {#_district 检测
	id = z_performance.141
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		add_district = {
			district_type = z_performance_checker
			ignore_cap = yes
		}
		#remove_deposit = z_pf_d_checker_uep
		remove_district = z_performance_checker
	}
}




#_手动检测
planet_event = {#_自动降级 添加检测trigger
	id = z_performance.6
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		z_pf_eft_pop_degrade = yes		#_degrade
		#add_deposit = z_pf_d_manual_checker
		set_timed_planet_flag = { flag = z_pf_job_checker days = 2 }	#_full pops trigger
		planet_event = { id = z_performance.61 days = 1 }
	}
}
planet_event = {#_district 检测
	id = z_performance.61
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		add_district = {
			district_type = z_performance_checker
			ignore_cap = yes
		}
		#remove_deposit = z_pf_d_manual_checker
		remove_district = z_performance_checker
		planet_event = { id = z_performance.62 days = 1 }
	}
}
planet_event = {#_handle excess pops
	id = z_performance.62
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		z_pf_eft_handle_excess = yes		#_excess
	}
}




#_[mid term] high density to mid
event = {
	id = z_performance.7
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	trigger = { mid_game_years_passed >= -1 }
	
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = z_performance_mid
					has_global_flag = z_performance_low
					has_global_flag = z_performance_never
				}
			}
		}
		remove_global_flag = z_performance_always
		remove_global_flag = z_performance_high
		set_global_flag = z_performance_mid
	}
}








###_handle excess unemployed pops	#############################################################

#_失业人口检测 [人口迁移target planet]
#_district 检测
planet_event = {
	id = z_performance.15
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		add_district = {
			district_type = z_performance_checker
			ignore_cap = yes
		}
		#remove_deposit = z_pf_d_checker_uep
		remove_district = z_performance_checker
	}
}


#_处理多余人口-迁移人口-自循环
planet_event = {
	id = z_performance.151
	hide_window = yes
	is_triggered_only = yes
	trigger = { z_pf_no_building_devastation = yes }	#_防止建筑损毁

	immediate = {
		random_owned_pop = {
			limit = { is_unemployed = yes }
			save_event_target_as = z_pf_handle_excess_pop
			planet = { set_timed_planet_flag = { flag = z_pf_plnt_resettle_ignore days = 1 } }
		}
		owner = {#_检测是否有适合宜居目标星球
			random_owned_planet = {
				limit = {
					NOR = {
						is_planet = root	#_自己
						has_planet_flag = z_pf_plnt_resettle_ignore
					}
					habitability = { who = event_target:z_pf_handle_excess_pop value > 0.5 }
					free_jobs > 0
					#free_housing > 0
					#free_amenities > 0
					is_under_colonization = no
					is_controlled_by = owner
					has_orbital_bombardment = no
				}
				save_event_target_as = z_pf_handle_excess_planet_target		#_设定目标星球
				z_pf_eft_handle_excess_job_check = yes		#_additional job check for resettled pops
			}
		}
		if = {#_满足条件执行人口迁移
			limit = {
				check_variable = { which = z_pf_excess_resettle_max_var value > 0 }		#_未达到迁移上限
				exists = event_target:z_pf_handle_excess_pop
				exists = event_target:z_pf_handle_excess_planet_target
			}
			change_variable = { which = z_pf_excess_resettle_max_var value = -1 }	#_迁移次数统计
			event_target:z_pf_handle_excess_pop = { clear_pop_category = yes }
			resettle_pop = {
				pop = event_target:z_pf_handle_excess_pop
				planet = event_target:z_pf_handle_excess_planet_target
			}
			planet_event = { id = z_performance.151 }	#_自循环
		}
	}
}

#_处理多余人口-迁移人口并清理未迁移人口-自循环
planet_event = {
	id = z_performance.152
	hide_window = yes
	is_triggered_only = yes
	trigger = { z_pf_no_building_devastation = yes }	#_防止建筑损毁

	immediate = {
		random_owned_pop = {
			limit = { is_unemployed = yes }
			save_event_target_as = z_pf_handle_excess_pop
			planet = { set_timed_planet_flag = { flag = z_pf_plnt_resettle_ignore days = 1 } }
		}
		owner = {#_检测是否有适合宜居目标星球
			random_owned_planet = {
				limit = {
					NOR = {
						is_planet = root	#_自己
						has_planet_flag = z_pf_plnt_resettle_ignore
					}
					habitability = { who = event_target:z_pf_handle_excess_pop value > 0.5 }
					free_jobs > 0
					#free_housing > 0
					#free_amenities > 0
					is_under_colonization = no
					is_controlled_by = owner
					has_orbital_bombardment = no
				}
				save_event_target_as = z_pf_handle_excess_planet_target		#_设定目标星球
				z_pf_eft_handle_excess_job_check = yes		#_additional job check for resettled pops
			}
		}
		if = {#_满足条件执行人口迁移
			limit = {
				check_variable = { which = z_pf_excess_resettle_max_var value > 0 }		#_未达到迁移上限
				exists = event_target:z_pf_handle_excess_pop
				exists = event_target:z_pf_handle_excess_planet_target
			}
			change_variable = { which = z_pf_excess_resettle_max_var value = -1 }	#_迁移次数统计
			event_target:z_pf_handle_excess_pop = { clear_pop_category = yes }
			resettle_pop = {
				pop = event_target:z_pf_handle_excess_pop
				planet = event_target:z_pf_handle_excess_planet_target
			}
			planet_event = { id = z_performance.152 }	#_自循环
		}
		#_未迁移人口-执行清除
		else = {
			planet_event = { id = z_performance.153 }	#_清理循环
		}
	}
}

#_处理多余人口-清理人口-自循环
planet_event = {
	id = z_performance.153
	hide_window = yes
	is_triggered_only = yes
	trigger = { z_pf_no_building_devastation = yes }	#_防止建筑损毁

	immediate = {
		random_owned_pop = {
			limit = {
				is_unemployed = yes
				NOR = {
					is_pop_category = ruler
					is_pop_category = specialist
					is_pop_category = bio_trophy
					is_pop_category = precursor
					is_pop_category = xeno_ward
					is_pop_category = pre_sapients
				}
			}
			kill_pop = yes
			owner = { add_resource = { energy = 1000 } }	#_补贴
			planet = { planet_event = { id = z_performance.153 } }	#_自循环
		}
	}
}








###_[2.5] old	#####################################################################################
#_always	[26/26]/per month
event = {
	id = z_performance.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = z_performance_always
	}
	
	immediate = {
		set_timed_global_flag = { flag = z_allow_job_check1 days = 4 }
		set_timed_global_flag = { flag = z_allow_job_check2 days = 30 }
	}
}
#_high	[3/5]/per month
event = {
	id = z_performance.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = z_performance_high
	}
	
	immediate = {
		set_timed_global_flag = { flag = z_allow_job_check1 days = 22 }
		set_timed_global_flag = { flag = z_allow_job_check2 days = 25 }
	}
}
#_mid	[1/3]/per month
event = {
	id = z_performance.3
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = z_performance_mid
	}
	
	immediate = {
		set_timed_global_flag = { flag = z_allow_job_check1 days = 26 }
		set_timed_global_flag = { flag = z_allow_job_check2 days = 27 }
	}
}
#_low	[1/3]/every 2 months
event = {
	id = z_performance.4
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = z_allow_job_check2 }
		has_global_flag = z_performance_low
	}
	
	immediate = {
		set_timed_global_flag = { flag = z_allow_job_check1 days = 56 }
		set_timed_global_flag = { flag = z_allow_job_check2 days = 57 }
	}
}
#_never	[0/3]/every 2 months
event = {
	id = z_performance.5
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = z_allow_job_check2 }
		has_global_flag = z_performance_never
	}
	
	immediate = {
		set_timed_global_flag = { flag = z_allow_job_check1 days = 57 }
		set_timed_global_flag = { flag = z_allow_job_check2 days = 57 }
	}
}


#_手动检测-old
#country_event = {
#	id = z_performance.6
#	hide_window = yes
#	is_triggered_only = yes
#	
#	immediate = {
#		set_timed_global_flag = { flag = z_manual_job_check days = 23 }
#	}
#}