##Calvitix lot of changes

namespace = fix_ai_actions

country_event = {
	id = fix_ai_actions.0
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		is_ai = no
	}

	immediate = {
		country_event = {
			id = fix_ai_actions.2
		}
	}
}

#default settings
event = {
	id = fix_ai_actions.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		#set_global_flag = ai_gateway_construction_flag
		set_global_flag = ai_hyper_relay_construction_flag
		set_global_flag = ai_xeno_compatibility_flag
		set_global_flag = ai_habitat_construction_flag
		set_global_flag = ai_unemployment_flag
		set_global_flag = ai_corvette_destroyer_spam_flag
		set_global_flag = ai_population_count_control_flag
		# set_global_flag = modifier_optimisation_flag
		remove_global_flag = ai_and_player_flag
	}
}

#menu
country_event = {
	id = fix_ai_actions.2
	title = "fix_ai_actions.1.name"
	desc = "fix_ai_actions.1.desc"
	picture = GFX_evt_ai_planet
	show_sound = event_mystic_reveal
	hide_window = no

	is_triggered_only = yes

	trigger = {
		is_ai = no
	}

	option = { 
		name = "fix_ai_actions.1.a" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.a"
		allow = {
			hidden_trigger = {
				always = yes ######################################################## Check out if they fixed gateways or whatever is wrong in giga ###########################
				has_global_flag = ai_hyper_relay_construction_flag
			}
		}
		hidden_effect = {
			remove_global_flag = ai_hyper_relay_construction_flag
			country_event = {
				id = fix_ai_actions.2
			}
		}
	}
	option = { 
		name = "fix_ai_actions.1.b" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.a"
		allow = {
			hidden_trigger = {
				always = yes
				has_global_flag = ai_gateway_construction_flag
			}
		}
		remove_global_flag = ai_gateway_construction_flag
		hidden_effect = {
			country_event = {
				id = fix_ai_actions.2
			}
		}
	}
	option = { 
		name = "fix_ai_actions.1.c" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.c"
		allow = {
			hidden_trigger = {
				has_global_flag = ai_habitat_construction_flag
			}
		}
		hidden_effect = {
			remove_global_flag = ai_habitat_construction_flag
			country_event = {
				id = fix_ai_actions.2
			}
		}
	}
	option = { 
		name = "fix_ai_actions.1.d" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.b"
		allow = {
			hidden_trigger = {
				has_global_flag = ai_xeno_compatibility_flag
			}
		}
		hidden_effect = {
			remove_global_flag = ai_xeno_compatibility_flag
			country_event = {
				id = fix_ai_actions.2
			}
		}
	}
	option = { 
		name = "fix_ai_actions.1.e" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.d"
		allow = {
			hidden_trigger = {
				has_global_flag = ai_unemployment_flag
			}
		}
		hidden_effect = {
			remove_global_flag = ai_unemployment_flag
			country_event = {
				id = fix_ai_actions.2
			}
		}
	}
	option = { 
		name = "fix_ai_actions.1.f" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.g"
		allow = {
			hidden_trigger = {
				has_global_flag = ai_population_count_control_flag
			}
		}
		hidden_effect = {
			remove_global_flag = ai_population_count_control_flag
			country_event = {
				id = fix_ai_actions.2
			}
		}
	}
	option = { 
		name = "fix_ai_actions.1.g" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.e"
		allow = {
			hidden_trigger = {
				has_global_flag = ai_corvette_destroyer_spam_flag
			}
		}
		hidden_effect = {
			remove_global_flag = ai_corvette_destroyer_spam_flag
			country_event = {
				id = fix_ai_actions.2
			}
		}
	}
	# option = { 
	# 	name = "fix_ai_actions.1.h" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.f"
	# 	allow = {
	# 		hidden_trigger = {
	# 			has_global_flag = modifier_optimisation_flag
	# 		}
	# 	}
	# 	hidden_effect = {
	# 		remove_global_flag = modifier_optimisation_flag
	# 		country_event = {
	# 			id = fix_ai_actions.2
	# 		}
	# 	}
	# }
	option = { 
		name = "fix_ai_actions.1.h" custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.h"
		allow = {
			hidden_trigger = {
				NOT = {
					has_global_flag = ai_and_player_flag
				}
			}
		}
		hidden_effect = {
		set_global_flag = ai_and_player_flag
			country_event = {
				id = fix_ai_actions.2
			}
		}
	}
	option = { 
		name = "fix_ai_actions.1.i" #custom_tooltip = "fix_ai_actions_event.3.custom_tooltip.h"
	}
}

country_event = {
	id = fix_ai_actions.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		if = {
			limit = {
				NOT = {
					has_global_flag = ai_and_player_flag
				}
			}
			is_ai = yes
		}
		has_global_flag = ai_unemployment_flag
	}

	immediate = {
		random_owned_planet = {
			limit = {
				colony_age > 60
				num_assigned_jobs = {
					job = unemployed
					value >= 1
				}
			}
			random_owned_pop = {
				limit = {
					NOT = {
						has_pop_flag = recently_resettled_pop_flag
					}
					is_unemployed = yes
					NOT = {
						has_job = bio_trophy
					}
				}
				set_timed_pop_flag = {
					flag = recently_resettled_pop_flag
					years = 1
				}
				prevprev = {
					random_owned_planet = {
						limit = {
							is_colony = yes
							free_jobs >= 1
						}
						resettle_pop = {
							pop = prevprev
							planet = this
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = fix_ai_actions.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		if = {
			limit = {
				NOT = {
					has_global_flag = ai_and_player_flag
				}
			}
			is_ai = yes
		}
		has_global_flag = ai_corvette_destroyer_spam_flag
		owner = { str_energy_crisis_1 = no } #Calvitix		
	}

	immediate = {
		#if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Check for Corvettes for [This.GetName]" }
		
		if = {
		    limit = { 				has_global_flag = str_fleet_add_flag
			}
		
		
		random_owned_fleet = {
			limit = {
				is_in_combat = no #Calvitix
				count_owned_ship = {
					limit = {
						is_ship_size = corvette
					}
					count > 60
				}
			}
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Corvettes on fleet   [This.GetName] for [Owner.GetName]" }
			if = {
				limit = { 
					prev = {
						has_technology = tech_destroyers
					}
				}
				random_owned_ship = {
					limit = {
						is_ship_size = corvette
					}
					delete_ship = this
				}
				random_owned_ship = {
					limit = {
						is_ship_size = corvette
					}
					delete_ship = this
				}
				create_ship = {
					name = random
					random_existing_design = destroyer
				}
				if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Destroyer Exchange on fleet   [This.GetName] for [Owner.GetName]" }				
			}
		}
		
		random_owned_fleet = {
			limit = {
				is_in_combat = no
				count_owned_ship = {
					limit = {
						is_ship_size = destroyer
					}
					count > 30
				}
			}
			if = {
				limit = { 
					prev = {
						has_technology = tech_cruisers
					}
				}
				if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Destroyers on fleet   [This.GetName] for [Owner.GetName]" }
				random_owned_ship = {
					limit = {
						is_ship_size = destroyer
					}
					delete_ship = this
				}
				random_owned_ship = {
					limit = {
						is_ship_size = destroyer
					}
					delete_ship = this
				}
				create_ship = {
					name = random
					random_existing_design = cruiser
				}
				if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Cruiser Exchange on fleet   [This.GetName] for [Owner.GetName]" }
			}
		}
		
		### Calvitix : Help the IA with too low Fleet and a lot of Alloys, to 'build' High-end Ships	
		
		#Add Dreadnought
		if = {
            limit = {
					resource_stockpile_compare = {
						resource = alloys
						value > 50000
					}
					used_naval_capacity_percent < 0.8 # 0.95						
					has_technology = tech_Dreadnought_1		
					not = { has_country_flag = fix_added_fleet }										
			}
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Alloys & Low Naval Capacity, try to add 1 Dreadnought for [This.GetName]" }		
		
			random_owned_fleet = {
				limit = {
					is_in_combat = no
					count_controlled_ship = {
						limit = {
						}
						count > 1
					}
					count_controlled_ship = {
						limit = {
						is_ship_size = transport
						}
						count = 0
					}
					count_controlled_ship = {
						limit = {
							is_ship_size = Dreadnought
						}
						count < 15
					}
				}
				if = {
					limit = { 
						prev = {
							has_technology = tech_Dreadnought_1
							not = { has_country_flag = fix_added_fleet }												
						}
					}
					if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 1 Dreadnought on fleet   [This.GetName] for [Owner.GetName]" }
					owner = {
						add_resource = {
							alloys = -10000
						}
					}				
					create_ship = {
						name = random
						random_existing_design = Dreadnought
					}
					prev = { set_country_flag = fix_added_fleet }
					
				}
			}
		}		

		#Add Battleships
		if = {
            limit = {
					resource_stockpile_compare = {
						resource = alloys
						value > 50000
					}
					used_naval_capacity_percent < 0.8 # 0.95						
					has_technology = tech_battleships		
					not = { has_country_flag = fix_added_fleet }					
					
			}

			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Alloys & Low Naval Capacity,  try to add 2 battleships for [This.GetName]" }		
		
			random_owned_fleet = {
				limit = {
					is_in_combat = no
					count_controlled_ship = {
						limit = {
						}
						count > 1
					}
					count_controlled_ship = {
						limit = {
						is_ship_size = transport
						}
						count = 0
					}
					count_controlled_ship = {
						limit = {
							is_ship_size = battleships
						}
						count < 15
					}
				}
				if = {
					limit = { 
						prev = {
							has_technology = tech_battleships
							not = { has_country_flag = fix_added_fleet }					
							
						}
					}
					if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 2 battleships on fleet   [This.GetName] for [Owner.GetName]" }
					owner = {
						add_resource = {
							alloys = -8000
						}
					}				
					create_ship = {
						name = random
						random_existing_design = battleship
					}
					create_ship = {
						name = random
						random_existing_design = battleship
					}
					prev = { set_country_flag = fix_added_fleet }
				}
			}
		}

		#Battlecruiser
		if = {
            limit = {
					resource_stockpile_compare = {
						resource = alloys
						value > 50000
					}
					used_naval_capacity_percent < 0.8 # 0.95						
					has_technology = tech_Battlecruiser_1	
					not = { has_country_flag = fix_added_fleet }					
			}
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Alloys & Low Naval Capacity,  try to add 2 Battlecruiser for [This.GetName]" }		
		
			random_owned_fleet = {
				limit = {
					is_in_combat = no
					count_controlled_ship = {
						limit = {
						}
						count > 1
					}
					count_controlled_ship = {
						limit = {
						is_ship_size = transport
						}
						count = 0
					}
					count_controlled_ship = {
						limit = {
							is_ship_size = Battlecruiser
						}
						count < 20
					}
				}
				if = {
					limit = { 
						prev = {
							has_technology = tech_Battlecruiser_1
							not = { has_country_flag = fix_added_fleet }												
						}
					}
					if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 2 Battlecruisers on fleet   [This.GetName] for [Owner.GetName]" }
					owner = {
						add_resource = {
							alloys = -8000
						}
					}				
					
					create_ship = {
						name = random
						random_existing_design = Battlecruiser
					}
					create_ship = {
						name = random
						random_existing_design = Battlecruiser
					}
					prev = { set_country_flag = fix_added_fleet }
					
				}
			}
		}	
		
		#Carrier
		if = {
            limit = {
					resource_stockpile_compare = {
						resource = alloys
						value > 60000
					}
					used_naval_capacity_percent < 0.8 # 0.95						
					has_technology = tech_Carrier_1		
					not = { has_country_flag = fix_added_fleet }										
			}
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Alloys & Low Naval Capacity,  try to add 1 Carrier for [This.GetName]" }		
		
			random_owned_fleet = {
				limit = {
					is_in_combat = no
					count_controlled_ship = {
						limit = {
						}
						count > 1
					}
					count_controlled_ship = {
						limit = {
						is_ship_size = transport
						}
						count = 0
					}
					count_controlled_ship = {
						limit = {
							is_ship_size = Carrier
						}
						count < 5
					}
				}
				if = {
					limit = { 
						prev = {
							has_technology = tech_Carrier_1
							not = { has_country_flag = fix_added_fleet }												
						}
					}
					if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 1 Carrier on fleet   [This.GetName] for [Owner.GetName]" }
					owner = {
						add_resource = {
							alloys = -8000
						}
					}				
					create_ship = {
						name = random
						random_existing_design = Carrier
					}
					prev = { set_country_flag = fix_added_fleet }
					
				}
			}
		}		



		#StrikeCruisers
		if = {
            limit = {
					resource_stockpile_compare = {
						resource = alloys
						value > 45000
					}
					used_naval_capacity_percent < 0.8 # 0.95						
					has_technology = tech_StrikeCruiser_1		
					not = { has_country_flag = fix_added_fleet }										
			}
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Alloys & Low Naval Capacity,  try to add 4 StrikeCruisers for [This.GetName]" }		
		
			random_owned_fleet = {
				limit = {
					is_in_combat = no
					count_controlled_ship = {
						limit = {
						}
						count > 1
					}
					count_controlled_ship = {
						limit = {
						is_ship_size = transport
						}
						count = 0
					}
					count_controlled_ship = {
						limit = {
							is_ship_size = StrikeCruiser
						}
						count < 20
					}
				}
				if = {
					limit = { 
						prev = {
							has_technology = tech_StrikeCruiser_1
							not = { has_country_flag = fix_added_fleet }					
								
						}
					}
					if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 4 StrikeCruisers on fleet   [This.GetName] for [Owner.GetName]" }
					owner = {
						add_resource = {
							alloys = -8000
						}
					}				
					create_ship = {
						name = random
						random_existing_design = StrikeCruiser
					}
					create_ship = {
						name = random
						random_existing_design = StrikeCruiser
					}
					create_ship = {
						name = random
						random_existing_design = StrikeCruiser
					}
					create_ship = {
						name = random
						random_existing_design = StrikeCruiser
					}
					prev = { set_country_flag = fix_added_fleet }

				}
			}
		}


		#Add Escort
		if = {
            limit = {
					resource_stockpile_compare = {
						resource = alloys
						value > 40000
					}
					used_naval_capacity_percent < 0.8 # 0.95					
					has_technology = tech_escortcarrier_1					
					not = { has_country_flag = fix_added_fleet }					
					
			}
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Alloys & Low Naval Capacity,  try to add 2 Escorts if possible for [This.GetName]" }		
		
			random_owned_fleet = {
				limit = {
					is_in_combat = no
					count_controlled_ship = {
						limit = {
						}
						count > 1
					}
					count_controlled_ship = {
						limit = {
						is_ship_size = transport
						}
						count = 0
					}				
					count_controlled_ship = {
						limit = {
							is_ship_size = escortcarrier
						}
						count < 10
					}
				}
				if = {
					limit = { 
						prev = {
							has_technology = tech_escortcarrier_1
							not = { has_country_flag = fix_added_fleet }					
							
						}
					}
					if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 2 escortcarrier on fleet   [This.GetName] for [Owner.GetName]" }
					owner = {
						add_resource = {
							alloys = -5000
						}
					}				
					create_ship = {
						name = random
						random_existing_design = escortcarrier
					}
					create_ship = {
						name = random
						random_existing_design = escortcarrier
					}
					prev = { set_country_flag = fix_added_fleet }
					
				}
			}
		}		

		if = {
            limit = {
					resource_stockpile_compare = {
						resource = alloys
						value > 35000
					}
					used_naval_capacity_percent < 0.8 # 0.95					
					has_technology = tech_cruisers
					not = { has_country_flag = fix_added_fleet }					
					
			}
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Too many Alloys & Low Naval Capacity,  try to add 4 Cruisers for [This.GetName]" }		
			random_owned_fleet = {
				limit = {
					is_in_combat = no
					count_controlled_ship = {
						limit = {
						}
						count > 1
					}
					count_controlled_ship = {
						limit = {
						is_ship_size = transport
						}
						count = 0
					}
					count_controlled_ship = {
						limit = {
							is_ship_size = cruiser
						}
						count < 30
					}
				}
				if = {
					limit = { 
						prev = {
							has_technology = tech_cruisers
							not = { has_country_flag = fix_added_fleet }												
						}
					}
					if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 4 Cruisers on fleet   [This.GetName] for [Owner.GetName]" }
					owner = {
						add_resource = {
							alloys = -4000
						}
					}				
					create_ship = {
						name = random
						random_existing_design = cruiser
					}
					create_ship = {
						name = random
						random_existing_design = cruiser
					}
					create_ship = {
						name = random
						random_existing_design = cruiser
					}
					create_ship = {
						name = random
						random_existing_design = cruiser
					}
					prev = { set_country_flag = fix_added_fleet }
					
				}
			}
		}

		#Science / Constructor, mini 4 (Recreate if lost and not created by I.A.)
		if = {
			limit = {
				years_passed > 15
				count_controlled_ship = {
					limit = {
					is_ship_size = science
					}
					count < 4
				}						
			}		
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 1 Scienceship for [Owner.GetName]" }
			create_fleet = {
				effect = {
					set_owner = root

					create_ship = {
						name = random
						random_existing_design = science
					}

					set_fleet_stance = evasive				
					set_location = root.capital_scope
					
					owner = {
						create_leader = {
							class = scientist
							sub_type = survey
							name = random
							species = owner_main_species
						}
					}
					set_leader = last_created_leader
				}			
			}
		
		}
			#constructor
		if = {
			limit = {
				years_passed > 15
				count_controlled_ship = {
					limit = {
					is_ship_size = constructor
					}
					count < 4
				}							
			}		
			if = { limit = { has_global_flag = edai_logging	} log = "FIX_Fleet: Add 1 Constructor for [Owner.GetName]" }
			create_fleet = {
				effect = {
					set_owner = root
					
					create_ship = {
						name = random
						random_existing_design = constructor
					}
					
					set_fleet_stance = evasive
					set_location = root.capital_scope
				}
			}
		}




		if = {
		    limit = { 
				has_country_flag = fix_added_fleet 
			}					
			remove_country_flag = fix_added_fleet 
		}		
		
		}
	}
}
country_event = {
	id = fix_ai_actions.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = yes
	}

	immediate = {
		add_modifier = {
			modifier = micro_marketing
		}
	}
}
country_event = {
	id = fix_ai_actions.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		if = {
			limit = {
				NOT = {
					has_global_flag = ai_and_player_flag
				}
			}
			is_ai = yes
		}
		has_global_flag = ai_population_count_control_flag
	}

	immediate = {
		every_owned_planet = {
			limit = {
				num_pops > 39 #9
			}
			remove_modifier = planet_pop_conversion_count
			add_modifier = {
				modifier = planet_pop_conversion_count days = 60
				mult = trigger:num_pops
			}
			}
		remove_modifier = country_pop_conversion_count
			add_modifier = {
			modifier = country_pop_conversion_count days = 60
			mult = trigger:num_pops
		}
	}
}

# country_event = {
# 	id = fix_ai_actions.7
# 	hide_window = yes
# 	is_triggered_only = yes

# 	trigger = {
# 		has_global_flag = modifier_optimisation_flag
# 	}

# 	immediate = {
# 		set_update_modifiers_batch = begin
# 		country_event = {
# 			id = fix_ai_actions.8
# 			days = 28
# 		}
# 	}
# }

# country_event = {
# 	id = fix_ai_actions.8
# 	hide_window = yes
# 	is_triggered_only = yes

# 	immediate = {
# 		set_update_modifiers_batch = end
# 	}
# }