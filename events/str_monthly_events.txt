namespace = str_monthly

event = {
	id = str_monthly.1
	hide_window = yes
    is_triggered_only = yes 
	
	immediate = {
		#if = { limit = { has_global_flag = edai_logging	} log = "Stats: str_monthly.1" }			
		every_country = {
			limit = {
				is_ai = yes
				or = {
					is_country_type = default
					has_country_flag = str_normal_empire
					is_country_type = awakened_fallen_empire
				}
			}
				country_event = { id = str_monthly.2 days = 1 random = 25  }
			#country_event = { id = str_monthly.3 days = 1 random = 25 }
			#if = { limit = { has_global_flag = edai_logging	} log = "Stats: Launch monthly.3 for [This.GetName]" }			
		}
	}
}

#This event creates a "supervisor flag", planets with a supervisor flag
#destroy buildings if they don't fit current strategy (it's important to do adjustments one building at a time
#so income is recalculated, otherwise you can see AI destroying 17 factories simultaneously)

country_event = {
	id = str_monthly.2
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			set_timed_planet_flag = {
				flag = str_supervisor
				days = 90
			}
			#if = { limit = { has_global_flag = edai_logging	} log = "STR: Supervisor on [This.GetName]" }						
		}
	}
}

#Event to Log the main infos from Empire
# country_event = {
	# id = str_monthly.3
	# hide_window = yes
	# is_triggered_only = yes
	# immediate = {
		# random_owned_planet = {
			# #if = { limit = { has_global_flag = edai_logging	} log = "Stats: Begin for [Owner.GetName]" }				
			# owner = {
				# export_resource_stockpile_to_variable  = { resource = energy variable = var_calv_energy_stock }	
				# export_resource_income_to_variable  = { resource = energy variable = var_calv_energy_income }	
				# export_resource_stockpile_to_variable  = { resource = minerals variable = var_calv_minerals_stock }	
				# export_resource_income_to_variable  = { resource = minerals variable = var_calv_minerals_income }	
				# export_resource_stockpile_to_variable  = { resource = alloys variable = var_calv_alloys_stock }	
				# export_resource_income_to_variable  = { resource = alloys variable = var_calv_alloys_income }	
				# export_resource_stockpile_to_variable  = { resource = food variable = var_calv_food_stock }	
				# export_resource_income_to_variable  = { resource = food variable = var_calv_food_income }	
				# export_resource_stockpile_to_variable  = { resource = consumer_goods variable = var_calv_consumer_goods_stock }	
				# export_resource_income_to_variable  = { resource = consumer_goods variable = var_calv_consumer_goods_income }	
				# export_resource_stockpile_to_variable  = { resource = volatile_motes variable = var_calv_volatile_motes_stock }	
				# export_resource_income_to_variable  = { resource = volatile_motes variable = var_calv_volatile_motes_income }	
				# export_resource_stockpile_to_variable  = { resource = exotic_gases variable = var_calv_exotic_gases_stock }	
				# export_resource_income_to_variable  = { resource = exotic_gases variable = var_calv_exotic_gases_income }	
				# export_resource_stockpile_to_variable  = { resource = rare_crystals variable = var_calv_rare_crystals_stock }	
				# export_resource_income_to_variable  = { resource = rare_crystals variable = var_calv_rare_crystals_income }	
				# export_resource_stockpile_to_variable  = { resource = unity variable = var_calv_unity_stock }	
				# export_resource_income_to_variable  = { resource = unity variable = var_calv_unity_income }	
				# export_resource_stockpile_to_variable  = { resource = influence variable = var_calv_influence_stock }	
				# export_resource_income_to_variable  = { resource = influence variable = var_calv_influence_income }	
				# export_resource_stockpile_to_variable  = { resource = physics_research variable = var_calv_physics_research_stock }	
				# export_resource_income_to_variable  = { resource = physics_research variable = var_calv_physics_research_income }	
				# export_resource_stockpile_to_variable  = { resource = society_research variable = var_calv_society_research_stock }	
				# export_resource_income_to_variable  = { resource = society_research variable = var_calv_society_research_income }	
				# export_resource_stockpile_to_variable  = { resource = engineering_research variable = var_calv_engineering_research_stock }	
				# export_resource_income_to_variable  = { resource = engineering_research variable = var_calv_engineering_research_income }	
				# if = { limit = { has_global_flag = edai_logging	} log = "Stats: [This.var_calv_energy_stock];[This.var_calv_energy_income];[This.var_calv_minerals_stock];[This.var_calv_minerals_income];[This.var_calv_alloys_stock];[This.var_calv_alloys_income];[This.var_calv_food_stock];[This.var_calv_food_income];[This.var_calv_consumer_goods_stock];[This.var_calv_consumer_goods_income];[This.var_calv_volatile_motes_stock];[This.var_calv_volatile_motes_income];[This.var_calv_exotic_gases_stock];[This.var_calv_exotic_gases_income];[This.var_calv_rare_crystal_stock];[This.var_calv_rare_crystal_income];[This.var_calv_unity_stock];[This.var_calv_unity_income];[This.var_calv_influence_stock];[This.var_calv_influence_income];[This.var_calv_physics_research_stock];[This.var_calv_physics_research_income];[This.var_calv_society_research_stock];[This.var_calv_society_research_income];[This.var_calv_engineering_research_stock];[This.var_calv_engineering_research_income]; for [This.GetName]" }
				
				# #export_trigger_value_to_variable  = { trigger = empire_size variable = var_calv_empire_size_stock }	
				# #export_trigger_value_to_variable  = { trigger = empire_sprawl_over_cap variable = var_calv_empire_sprawl_over_cap_stock }	
				# #export_trigger_value_to_variable  = { trigger = num_pops variable = var_calv_num_pops_stock }	
				# #export_trigger_value_to_variable  = { trigger = fleet_size variable = var_calv_fleet_size_stock }	
				# #export_trigger_value_to_variable  = { trigger = num_starbases variable = var_calv_num_starbases_stock }	
				# #if = { limit = { has_global_flag = edai_logging	} log = "Stats: Military; [This.var_calv_empire_size_stock];[This.var_calv_empire_sprawl_over_cap_stock];[This.var_calv_num_pops_stock];[This.var_calv_fleet_size_stock];[This.var_calv_num_starbases_stock]; for [This.GetName]" }				
			# }
		# }
	# }
# }

# #Event to Log the main infos from Empire
# country_event = {
	# id = str_monthly.4
	# hide_window = yes
	# is_triggered_only = yes
	# immediate = {
		# random_owned_planet = {
			# #if = { limit = { has_global_flag = edai_logging	} log = "Stats: Begin for [Owner.GetName]" }				
			# owner = {
				# export_trigger_value_to_variable  = { trigger = empire_size variable = var_calv_empire_size_stock }	
				# export_trigger_value_to_variable  = { trigger = empire_sprawl_over_cap variable = var_calv_empire_sprawl_over_cap_stock }	
				# export_trigger_value_to_variable  = { trigger = num_pops variable = var_calv_num_pops_stock }	
				# export_trigger_value_to_variable  = { trigger = fleet_size variable = var_calv_fleet_size_stock }	
				# export_trigger_value_to_variable  = { trigger = num_starbases variable = var_calv_num_starbases_stock }	
				# if = { limit = { has_global_flag = edai_logging	} log = "Stats: Military; [This.var_calv_empire_size_stock];[This.var_calv_empire_sprawl_over_cap_stock];[This.var_calv_num_pops_stock];[This.var_calv_fleet_size_stock];[This.var_calv_num_starbases_stock]; for [This.GetName]" }				
			# }
		# }
	# }
# }

