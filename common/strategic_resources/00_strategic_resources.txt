# Original File
#
# Calvitix Check 3.0.1  18/04/2021
#
# Merge with Starnet AI 16/05/2021
#
#
# IMPORTANT:
# AI_MIN_CURRENCY_TO_SELL = 1000
# Appears to be needed in defines for for resource buy/selling to work correctly.


# If below this threshold and negative income all targets are disabled to try and buy the resource until above threshold.
@critical_energy_value = 50
@critical_minerals_value = 700
@critical_food_value = 100
@critical_consumer_goods_value = 50
@critical_alloys_value = 50
@critical_mote_value = 25
@critical_exotic_gases_value = 25
@critical_rare_crystals_value = 25

# Resources tend not to be sold unless above these thresholds (except if a resource is critical).
@target_energy_value = 1300
@target_minerals_value = 5000
@target_food_value = 1000
@target_consumer_goods_value = 350
@target_alloys_value = 1500
@target_mote_value = 150
@target_exotic_gases_value = 150
@target_rare_crystals_value = 150

# If above this threshold resource given reduced weight so that it is more likely to be sold.
@sell_mote_value = 400
@sell_exotic_gases_value = 400
@sell_rare_crystals_value = 400



### System Resources

time = {
}


### Basic Resources

energy = {
	tradable = yes
	max = 50000
	
	deficit_modifier = energy_deficit #found in static modifiers

	ai_weight = {
		weight = 0.9 # IMPORTANT: Energy weight can cause buy/sell looping.
		modifier = {
			factor = 1.5
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
		}
		modifier = {
			factor = 1.25 # IMPORTANT: This should be matched to the AI_MIN_CURRENCY_TO_SELL and AI_MIN_CURRENCY_INCOME_TO_SELL in defines.
			resource_stockpile_compare = { resource = energy value < 1000 }
			resource_income_compare = { resource = energy value < 10 }
		}
	}

	ai_wants = {
		base = 1
### STARNET AI
		modifier = {
			add = @target_energy_value
			NOR = {
				AND = {
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 } 
				}
				AND = {
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
				}
			}
		}
		modifier = {
			factor = 6.5
			or = {
			has_ascension_perk = ap_world_shaper
			has_ascension_perk = ap_hive_worlds
			has_ascension_perk = ap_machine_worlds		
			}
		}
		modifier = {
			add = @critical_energy_value
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
		}
	}
}

minerals = {
	tradable = yes
	market_amount = 100
	market_price = 100
	max = 15000
	
	deficit_modifier = minerals_deficit #found in static modifiers

	ai_weight = {
		weight = 1.5
		modifier = {
			factor = 3
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 20 }
		}
		modifier = {
			factor = 2
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 40 }
		}
	}

	ai_wants = {
###STARNET AI
		base = 1
		modifier = {
			add = 15000
			resource_income_compare = { resource = minerals value < 60 }
			resource_stockpile_compare = { resource = minerals value < 400 }
			resource_stockpile_compare = { resource = energy value > 400 }
		}
		
		modifier = {
			add = @target_minerals_value
			NOR = {
				AND = {
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
				}
			}
		}
		modifier = {
			add = @critical_minerals_value
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
		}
	}
}

food = {
	tradable = yes
	market_amount = 100
	market_price = 100
	max = 15000 
	
	deficit_modifier = food_deficit #found in static modifiers
	
	ai_weight = {
		weight = 1
		modifier = {
			factor = 2
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
		}
	}

	ai_wants = {
###STARNET AI
		base = 1
		modifier = {
			add = @target_food_value
			NOR = {
				AND = {
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
				}
			}
		}
		modifier = {
			add = @critical_food_value
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
		}
###
	}
}

physics_research = {
	ai_weight = {
		weight = 1
	}
}

society_research = {
	ai_weight = {
		weight = 1
	}
}

engineering_research = {
	ai_weight = {
		weight = 1
	}
}

influence = {
	max = 1000
	tooltip_decimals = 1
	fixed_max_amount = yes
	
	deficit_modifier = influence_deficit #found in static modifiers
	
	ai_weight = {
		weight = 1
	}
}

unity = {
	ai_weight = {
		weight = 1
	}
}

###########################
### Manufactured Resources  ###
###########################

alloys = {
	tradable = yes
	market_amount = 25
	market_price = 100
	max = 15000
	
	deficit_modifier = alloys_deficit
	
	ai_weight = {
		weight = 3.7 
		modifier = {
			factor = 2
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 15 }
		}
	}

	ai_wants = {
###STARNET AI
		base = 1
		modifier = {
			factor = 2
			resource_stockpile_compare = {
				resource = alloys
				value > 4000
			}
		}
		modifier = {
			factor = 3
			resource_stockpile_compare = {
				resource = alloys
				value > 4000
			}
			has_technology = tech_mega_engineering
		}
		
		modifier = {
			add = @target_alloys_value
			NOR = {
				AND = {
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
				}
			}
		}
		modifier = {
			add = @critical_alloys_value
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
		}
	}
}

consumer_goods = {
	tradable = yes
	market_amount = 50
	market_price = 100
	max = 15000
	
	deficit_modifier = consumer_goods_deficit #found in static modifiers
	
	ai_weight = {
###STARNETAI
		weight = 2
		modifier = {
			factor = 2
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
		}
###
	}

	ai_wants = {
###STARNET AI
		base = 1
		modifier = {
			add = @target_consumer_goods_value
			NOR = {
				AND = {
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
				}
			}
		}
		modifier = {
			add = @critical_consumer_goods_value
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
		}
	}
}

###########################
### Advanced Resources  ###
###########################

volatile_motes = {
	tradable = yes
	market_amount = 10
	market_price = 100
	max = 15000
	
	prerequisites = { "tech_mine_volatile_motes" }
	
	deficit_modifier = volatile_motes_deficit #found in static modifiers
	
	ai_weight = {
		weight = 10
		modifier = {
			factor = 2
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
		}
		modifier = {
			factor = 0.5
			resource_stockpile_compare = { resource = volatile_motes value > @sell_mote_value }
		}
	}

	ai_wants = {
		base = 1
###STARNET AI
		modifier = {
			add = @target_mote_value
			NOR = {
				AND = {
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
				}
			}
		}
		modifier = {
			add = @critical_mote_value
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
		}
###
	}
}

exotic_gases = {
	tradable = yes
	market_amount = 10
	market_price = 100
	max = 15000
	
	prerequisites = { "tech_mine_exotic_gases" }
	
	deficit_modifier = exotic_gases_deficit #found in static modifiers
	
	ai_weight = {
		weight = 10
		modifier = {
			factor = 2
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
		}
		modifier = {
			factor = 0.5
			resource_stockpile_compare = { resource = exotic_gases value > @sell_exotic_gases_value }
		}
	}

	ai_wants = {
		base = 1
###STARNET AI
		modifier = {
			add = @target_exotic_gases_value
			NOR = {
				AND = {
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
				}
			}
		}
		modifier = {
			add = @critical_exotic_gases_value
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
		}
	}
}

rare_crystals = {
	tradable = yes
	market_amount = 10
	market_price = 100
	max = 15000
	
	prerequisites = { "tech_mine_rare_crystals" }
	
	deficit_modifier = rare_crystals_deficit #found in static modifiers
	
	ai_weight = {
		weight = 10
		modifier = {
			factor = 2
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
		}
		modifier = {
			factor = 0.5
			resource_stockpile_compare = { resource = rare_crystals value > @sell_rare_crystals_value }
		}
	}

	ai_wants = {
		base = 1
		modifier = {
			add = @target_rare_crystals_value
			NOR = {
				AND = {
			resource_stockpile_compare = { resource = energy value < @critical_energy_value }
			resource_income_compare = { resource = energy value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = minerals value < @critical_minerals_value }
			resource_income_compare = { resource = minerals value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = food value < @critical_food_value }
			resource_income_compare = { resource = food value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = alloys value < @critical_alloys_value }
			resource_income_compare = { resource = alloys value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = consumer_goods value < @critical_consumer_goods_value }
			resource_income_compare = { resource = consumer_goods value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = volatile_motes value < @critical_mote_value }
			resource_income_compare = { resource = volatile_motes value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = exotic_gases value < @critical_exotic_gases_value }
			resource_income_compare = { resource = exotic_gases value < 0 }
				}
				AND = {
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
				}
			}
		}
		modifier = {
			add = @critical_rare_crystals_value
			resource_stockpile_compare = { resource = rare_crystals value < @critical_rare_crystals_value }
			resource_income_compare = { resource = rare_crystals value < 0 }
		}
	}
}


###########################
###    Rare Resources   ###
###########################

# Living Metal
sr_living_metal = {
	tradable = yes
	market_amount = 5
	market_price = 100
	max = 15000
	
	prerequisites = { "tech_mine_living_metal" }
	visibility_prerequisite = { always = yes }
	
	ai_weight = {
		weight = 25
	}
}

# Zro
sr_zro = {
	tradable = yes
	market_amount = 5
	market_price = 100
	max = 15000
	
	prerequisites = { "tech_mine_zro" }
	visibility_prerequisite = { always = yes }

	ai_weight = {
		weight = 25
	}
}

# Dark Matter
sr_dark_matter = {
	tradable = yes
	market_amount = 5
	market_price = 100
	max = 15000

	prerequisites = { "tech_mine_dark_matter" }
	visibility_prerequisite = { always = yes }
	
	ai_weight = {
		weight = 25
	}
}

# Nanites
nanites  = {
	tradable = no
	max = 15000

	visibility_prerequisite = { always = yes }
	deficit_modifier = nanites_deficit #found in static modifiers
	
	ai_weight = {
		weight = 100
	}
}

# Minor Artifacts
minor_artifacts = {
	tradable = no
	
	ai_weight = {
		weight = 1
	}
}

#####################
###    Nemesis    ###
#####################

menace = {
	tradable = no
	
	ai_weight = {
		weight = 1
	}
}
