
	NGameplay = {

		#Calvitix Defines, based on ACOT_modif


		# Not used for crisis faction, mainly for FEs/AEs
		SCALED_DIFFICULTY_MAX_GALAXY_SIZE = 1000	# At this galaxy size, the full scaled difficulty modifier is applied
SCALED_DIFFICULTY_GALAXY_SIZE_MULT = 1.00  #0.75	# How much does galaxy size impact difficulty scaling
		SCALED_DIFFICULTY_HABITABLE_PLANETS_MULT = 0.75 # 0.5	# How much does amount of habitable planets impact difficulty scaling

		FALLEN_EMPIRE_REPEATABLE_TECHS  = 20  #10



		WAR_EXHAUSTION_NAVAL_CAP_ADD		  = 100
		WAR_EXHAUSTION_SHIP_KILLED_MULT		  = 2.50   #2.00	# Multiplier of war exhaustion gained from ships
		WAR_EXHAUSTION_ARMY_KILLED_MULT		  = 0.4	# 0.25 # Multiplier of war exhaustion gained from land battles (armies)
		WAR_EXHAUSTION_PLANET_DESTRUCTION_MULT = 10.0	#5.0	# War exhaustion from planets destroyed
		#WAR_EXHAUSTION_PASSIVE_GAIN_YEARLY	  = 0.1		# The amount of yearly war exhaustion gained during war while under WAR_EXHAUSTION_PASSIVE_GAIN_CUTOFF
		WAR_EXHAUSTION_PASSIVE_WAR_SIZE_DIV	  = 0.1
		WAR_EXHAUSTION_PASSIVE_GAIN_CUTOFF	  = 1.0		# At this amount of war exhaustion (excluding occupation) you stop getting war exhaustion passively over time
		WAR_EXHAUSTION_FROM_UNITS_CUTOFF	  = 1.0		# At this amount of war exhaustion (excluding occupation) you stop gaining war exhaustion from lost units
		WAR_EXHAUSTION_HIGH_THRESHOLD		  = 1.0		# Apply negative modifier and show alert if war exhaustion >= this

		ENFORCE_STATUS_QUO_ENABLED	 		  = yes		# Can status quo be enforced at high WE?
		ENFORCE_STATUS_QUO_MONTHS			  = 24


		PLANET_HEALTH_MAX 					= 100
	#calvitix disabled 	PLANET_HEALTH_REGEN					= 0.1	#0.05		# Each day
		PLANET_HEALTH_REGEN_DELAY 			= 120	#60	# Days since being bombarded before repairs can be done at full speed

		PLANET_HEALTH_PROTECT_POPS			 	 = 0.90	 #0.75		# At above this health fraction, pops will not die
		PLANET_HEALTH_PROTECT_ARMIES			 = 0.90	 #0.75	# At above this health fraction, defending armies take half damage from bombardment
		#PLANET_HEALTH_INHIBIT_FTL				 = 0.5		# At above this health fraction, planet FTL inhibitors are functional
		PLANET_HEALTH_INCREASE_ARMY_DAMAGE		 = 0.50	  #0.25	# Below this health fraction, defending armies take triple (from double in vanilla) damage from bombardment
		#PLANET_HEALTH_ARMY_PROTECTED_DAMAGE_MULT = 0.5
		PLANET_HEALTH_ARMY_INCREASED_DAMAGE_MULT = 3.0   #2.0

	#	POLICY_YEARS						= 5 	# Years a set policy can not be changed for
	#	SPECIES_POLICY_YEARS				= 5

		DEBRIS_BASE_COST					= 0	# Base cost of special project for analyzing debris
		DEBRIS_ANALYZED_AREA_POINTS			= 100	# 20 # Points * Level given for each component analyzed
		DEBRIS_ANALYZED_TECH_PROGRESS		= 0.05	# 0.10 # Tech progress added when analyzing component that require tech you don't have
		DEBRIS_DAYS							= 3600	#1800 # How many days the debris is visible for
		DEBRIS_RESEARCH_TIME				= 90	# How many days it takes to analyze 1 debris.


		MIN_RIVAL_YEARS						= 1	# Years before you can remove an empire as a rival

		# Bombardment damage to planets from ships
		#ORBITAL_BOMBARDMENT_DAMAGE_MAX_SCALE			= 200
		#ORBITAL_BOMBARDMENT_COLONY_DMG_SCALE			= 0.01
		#ORBITAL_BOMBARDMENT_PLANET_DMG_SCALE			= 0.002
		#ORBITAL_BOMBARDMENT_ARMY_DMG_SCALE				= 0.02
		#ORBITAL_BOMBARDMENT_ASSAULT_ARMY_DAMAGE_MULT	= 5.00	# Assault armies take this much more damage from orbital bombardment
		ORBITAL_BOMBARDMENT_KILL_POP_CHANCE				= 0.5  #0.3	# Multiplied by stance & damage dealt
		ORBITAL_BOMBARDMENT_KILL_POP_COOLDOWN			= 5	# 10 # Min days between killing pops from bombardment

		# Collateral damage to planet from armies
		#COLLATERAL_DAMAGE_CHANCE						= 0.10	# Chance that an army causes collateral damage while dealing damage to an enemy army
		#COLLATERAL_DAMAGE_BASE_SCALE					= 0.02	# Base amount of planetary damage inflicted from collateral damage
		#COLLATERAL_DAMAGE_DEFENDER_MULT					= 0.50	# Collateral damage from defending units is multiplied by this
		#COLLATERAL_DAMAGE_MAX_PER_DAY					= 0.25	# Per combat side
		#COLLATERAL_DAMAGE_KILL_POP_CHANCE				= 0.1	# Multiplied by damage dealt

		#STATION_SELF_REPAIR_TIMER_DAYS			= 30	# Number of days after taking damage before a station will start self-repairing

		STARBASE_SELF_REPAIR_TIMER_DAYS			= 30	# Number of days after taking damage before a starbase will start self-repairing
		STARBASE_DISABLED_HEALTH_PERCENTAGE		= 0		# Percentage of max health when a starbase that can be disabled will be disabled.
		STARBASE_ENABLED_HEALTH_PERCENTAGE		= 0.25	# 0.05 # Percentage of max health when a starbase that can be disabled will be enabled.
		#STARBASE_AUTO_CONTROL_DISTANCE			= 80	# Distance at which a fleet can seize control of a disabled starbase

		PLANET_COMBAT_WIDTH_BASE				= 10 # 5 # Maximum number of troops that can fight at the same time
		PLANET_COMBAT_WIDTH_FROM_SIZE 			= 1 # 0.2 # Extra combat width per tile

		GENERAL_DEATH_CHANCE					= 0.05		# Chance that general dies when an army under command is destroyed (scaled to number of armies)

		GOVERNMENT_COOLDOWN_YEARS				= 10    #20	# Cooldown years after changing government before you can change it again


		NUM_TECH_ALTERNATIVES					= 3
		TECH_COST_MULT_FALLEN_EMPIRE			= 2	# Awakened Empires pay this much more to research techs
		TECH_WEIGHT_PREVIOUS_OPTION				= 1	# If a tech was one of the alternatives last time its weight will be multiplied with TECH_WEIGHT_PREVIOUS_OPTION

		## tradition cost = ( base_cost + ( cost_tradition * num_traditions )^traditions_exponential ) * ( 1 + cost_planet*num_planets + cost_system*num_systems )

		#MISSION_PROGRESS_MAX					= 1	# When is a mission finished?
		NEW_HEIR_CHANCE							= 0.01	#0.05 # Chance to get a new heir each day. Range is 0 to 1


		RESEARCH_AGREEMENT_SPEED_MULT			= 0.40 #0.25 Calvitix	# Research speed increased by this for trade research agreement deal




	}


	NShip = {
		AGGRESSIVE_STANCE_INVASION_ODDS_MULT = 1.2			# Transport fleets on aggressive stance want to have combat strength of enemy ground troops x this to invade a world
		#AGGRESSIVE_STANCE_MIN_POWER_MULT	= 0.2			# Fleets that are less than our military power x this will be ignored by aggressive fleets that are bombarding

		#DESIGNER_WEAPON_PREF_MUL			= 1.33			# How much does weapon preference tags in the ship designer affect the weight it assigns a weapon?
		#DESIGNER_WEAPON_STACKING_DIV		= 0.25			# The higher this is the more the ship designer will try to vary which weapon types are used on its sections

		ABANDONED_STATION_DECAY_RATE		= 0.001	 #0.003	# Abandoned stations lose this amount of health per day


		#STRIKE_CRAFT_COMBAT_REGEN 			= 0.2

		#MOVE_SHIP_TO_FLEET_MAX_DIST			= 50.0

		OUT_OF_COMBAT_SHIELD_REGEN_MULT		= 1.0		# Shields recharge this much faster outside combat


	}

	NCombat = {
		# When ships are attacking they will try to stay at max range and orbit their target.
		# If the ship is closer than max range this value determines how fast it will "back off" in order to get to max range.
		# 0.0 means that the ship will not back off and orbit with whatever radius it already has
		# 1.0 means that the ship will prioritize orbit velocity the same as "back-off"-velocity. i.e a 45 degree angle
		#COMBAT_BACK_OFF_RATE					= 0.70

		#SHIP_SMOOTH_ROTATION_THRESHOLD			= 3.141 # Used to smooth rotation rate of ships. equation is "y = x * ( min ( 1.0 x / SHIP_SMOOTH_ROTATION_THRESHOLD ) )" where x is the wanted delta rotation this tick and y the resulting delta rotation

		#FORCE_DISPARITY_BASE					= 20	# Added to size of fleets when calculating force disparity
		FORCE_DISPARITY_MAX_EFFECT				= 4.0  #2.0	# Max multiplier on force disparity

		ADMIRAL_DEATH_CHANCE					= 0.05	#0.1	# Chance that admiral dies when their ship gets blown up

		COMBAT_SHIP_TARGETING_SIZE_MULT			= 0.05	# The higher this weight is, the more likely smaller, more fragile ships are to be targeted first
		COMBAT_SHIP_TARGETING_SIZE_MAX			= 6  #10
		COMBAT_SHIP_TARGETING_TRACKING_MULT		= 5.0	#2.0 # This weight is needed to ensure high-tracking ships target high-evasion ships
		COMBAT_SHIP_EVASION_TARGETING_WEIGHT 	= 5.0  # 2.0	# The higher this is, the less likely ships are to target enemy ships with high chance to evade their shots
		COMBAT_SHIP_LOW_HEALTH_THRESHOLD 		= 0.5			# The health threshold at which the low health targeting weight is applied
		COMBAT_SHIP_LOW_HEALTH_TARGETING_WEIGHT = 2.0  #1.5
		COMBAT_SHIP_DISTANCE_TARGETING_WEIGHT = 0.002		# The higher this is, the less likely ships will be to fire on distant targets
		COMBAT_SHIP_DISTANCE_TARGETING_WEIGHT_MIN = 0.10	# Target weight can't be multiplied by less than this due to distance
		#COMBAT_SHIP_UNARMED_TARGETING_WEIGHT = 0.05		# The lower this is, the less likely ships are to target unarmed enemies over armed ones
		COMBAT_SHIP_STARBASE_TARGETING_WEIGHT = 0.10  #0.75	# The lower this is, the less likely ships are to target Starbases over military ships & defensive platforms
		#COMBAT_SHIP_EVASION_AVOID_MIN_SHIP_SIZE	= 8		# Minimum size of ships that should try to avoid firing on highly evasive targets
		COMBAT_SHIP_EVASION_AVOID_THRESHOLD		= 0.65   #0.7	# Above this level of evasion, try to find a less evasive target

		#COMBAT_DETECT_RANGE_MULT				= 1.20	# Range to engage in combat with other ships is <fleets max attack range> * COMBAT_DETECT_RANGE_MULT
		#COMBAT_DETECT_RANGE_MIN					= 10
		#COMBAT_AREA_MIN_ATTACK_RADIUS			= 0.2
		COMBAT_EMERGENCY_FTL_LOST_RISK 			= 0.05 #0.01 # x% risk of ship becoming forever lost when jumping.
		COMBAT_EMERGENCY_FTL_DAMAGE_RISK 		= 0.40 #0.1 # x% chance of ship taking damage in emergency ftl jump
		#COMBAT_EMERGENCY_FTL_DAMAGE_AMOUNT 		= 0.20 # x% of damage that emergency ftl can potentially cause
		#COMBAT_BASE_DAYS_UNTIL_EMERGENCY_FTL 	= 30.0	# how many days a fleet should be in combat until they can emergency ftl

		SHIP_DISENGAGE_FRIENDLY_TERRITORY_MULT		= 2.0  #1.25
	}

	NArmy = {
		#MONTHLY_REINFORCE 				= 0.2				# Monthly health percentage reinforcement of armies

		#BASE_HEALTH						= 200.0				# Base health
		#BASE_DAMAGE_MIN					= 1.5				# Base min damage
		#BASE_DAMAGE_MAX					= 3.0				# Base max damage

		#BASE_MORALE						= 200.0				# Base morale
		MORALE_DAMAGE_MULT				= 0.50	 #1.0			# Morale Damage Multiplier how much of damage is also dealt to morale.
		#MONTHLY_MORALE_REGENERATION		= 1.0				# How much morale this unit regenerates each month percentage of max value.
		#DISENGAGED_EFFECT				= 0.15				# When a unit is disengaged, damage it deals is multiplied by this
		#BROKEN_MORALE_EFFECT			= 0.25				# When a unit's morale is 0, damage it deals is multiplied by this
		#LOW_MORALE_THRESHOLD			= 0.3
		#LOW_MORALE_EFFECT				= 0.75				# When a unit's morale is less LOW_MORALE_THRESHOLD, damage it deals is multiplied by this

		ARMY_EXP_GAIN_DAMAGE_DEALT		= 10.0	#2.0			# Gained each time army deals damage
		ARMY_EXP_GAIN_DAMAGE_TAKEN		= 5.0	#1.0			# Gained each time army takes damage
		#ARMY_EXP_EXPERIENCED			= 100				# Amount of exp to reach experienced rank
		ARMY_EXP_VETERAN				= 500	#1000			# Amount of exp to reach veteran rank
		ARMY_EXP_ELITE					= 5000	#10000			# Amount of exp to reach elite rank

		#NUM_DAYS_BEFORE_RETREAT			= 30				# How many days that need to pass before we can retreat.
		#RETREAT_UNIT_LOST_MIN_CHANCE	= 0.10				# Chance that a retreating unit is lost (scales to health)
		#RETREAT_UNIT_LOST_MAX_CHANCE	= 0.75

		#GROUND_COMBAT_RANDOM_TARGETING_WEIGHT	= 1.0		# The higher this is, the more random army targeting will be
		#GROUND_COMBAT_LOW_HEALTH_THRESHOLD 		= 0.5		# The army health threshold at which the low health targeting weight is applied
		#GROUND_COMBAT_LOW_HEALTH_TARGETING_WEIGHT = 3.0

		ARMY_MILITARY_POWER_SCALE		= 0.10
		ARMY_MILITARY_POWER_EXPONENT	= 0.7	# math: power = ( ( effective_health * damage_per_day ) ^ exponent ) * scale
		ARMY_MILITARY_POWER_DAMAGE_MULT	= 1
		ARMY_MILITARY_POWER_MORALE_DAMAGE_MULT	= 0.5
		ARMY_MILITARY_POWER_HEALTH_MULT	= 0.5
		ARMY_MILITARY_POWER_MORALE_MULT = 0.25
		ARMY_MILITARY_POWER_NO_MORALE_FACTOR 	= 1.5

	}

	#Economy
	NEconomy = {
		FLEET_UPGRADE_TIME_COST_MULT		= 0.15 # 0.3		# Upgrade fleet time cost
		FLEET_UPGRADE_SECTION_COST_REFUND_MULT = 0.75	# Refund factor for ship section when upgrading
		FLEET_UPGRADE_COMPONENT_COST_REFUND_MULT = 0.80 # Refund factor for ship components when upgrading
	}
