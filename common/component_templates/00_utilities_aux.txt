# Original File
#
# Calvitix Check 3.4.4  21.06.2022
#
#
#
# Merge with Extra Ship Components 3.0 Overwrite  02.05.2021
# Merge with Starnet AI  23.05.2021
#
### ###################################################### ###
###      Overriding vanilla file to establish upgrade      ###
###     chain from vanilla components to ESC components    ###
### ###################################################### ###

####################
# Reactor Booster #
####################
utility_component_template = {
	key = "REACTOR_BOOSTER_1"
	size = aux
	icon = "GFX_ship_part_reactor_booster_1"
	icon_frame = 1
	power = 20
	resources = {
		category = ship_components
		cost = {
			alloys = 5
		}
	}

	prerequisites = { "tech_reactor_boosters_1" }
	component_set = "REACTOR_BOOSTER_1"
	upgrades_to = "REACTOR_BOOSTER_2"

	ai_weight = {
		weight = 3 #1
		modifier = { #mod ?
			factor = 100
			not = { has_technology = tech_fusion_power }
		}
	}
}

utility_component_template = {
	key = "REACTOR_BOOSTER_2"
	size = aux
	icon = "GFX_ship_part_reactor_booster_2"
	icon_frame = 1
	power = 50
	resources = {
		category = ship_components
		cost = {
			alloys = 10
		}
	}

	prerequisites = { "tech_reactor_boosters_2" }
	component_set = "REACTOR_BOOSTER_2"
	upgrades_to = "REACTOR_BOOSTER_3"

	ai_weight = {
		weight = 5 #3
	}
}

utility_component_template = {
	key = "REACTOR_BOOSTER_3"
	size = aux
	icon = "GFX_ship_part_reactor_booster_3"
	icon_frame = 1
	power = 100
	resources = {
		category = ship_components
		cost = {
			alloys = 15
		}
	}

	prerequisites = { "tech_reactor_boosters_3" }
	component_set = "REACTOR_BOOSTER_3"
	upgrades_to = "ESC_REACTOR_BOOSTER_4"

	ai_weight = {
		weight = 5 # 15 #5
	}
}

####################
# Shield Recharger #
####################

utility_component_template = {
	key = "SHIELD_BOOSTER"
	size = aux
	icon = "GFX_ship_part_shield_recharger"
	icon_frame = 1
	power = -20
	resources = {
		category = ship_components
		cost = {
			alloys = 10
			exotic_gases = 1
		}
	}

	prerequisites = { "tech_shield_rechargers_1" }
	component_set = "SHIELD_BOOSTER"
	upgrades_to = "ESC_ADV_SHIELD_CAPACITOR"

	modifier = {
		ship_shield_mult = 0.1
	}

	ai_weight = {
		weight = 10
		modifier = {
			factor = 2.0
			is_preferred_weapons = weapon_type_energy
			is_country_type = default
			has_monthly_income = { resource = exotic_gases value > 0 }
		}
		modifier = {
			factor = 1.25
			is_peaceful_or_careful = yes
		}
		modifier = {
			factor = 0
			nhsc_is_playable_empire = yes
			has_monthly_income = { resource = exotic_gases value <= 0 }
		}
		modifier = {
			factor = 4.0
			is_country_type = default
			has_technology = tech_dark_matter_deflector
		}
		
		modifier = {
			factor = 6.5
			is_country_type = default
			has_technology = tech_psionic_shield
		}
	}
}

#############################
# Regenerative Hull Tissue  #
#############################

utility_component_template = {
	key = "AUTO_REPAIR"
	size = aux
	icon = "GFX_ship_part_auto_repair"
	icon_frame = 1
	power = 0
	resources = {
		category = ship_components
		cost = {
			alloys = 20
		}
	}

	modifier = {
		ship_hull_regen_add_perc = 0.05 #0.25
		ship_armor_regen_add_perc = 0.1 # 0.50
	}

	prerequisites = { tech_regenerative_hull_tissue }
	component_set = "AUTO_REPAIR"

	ai_weight = {
		weight = 10
		modifier = {
			factor = 2.0
			is_preferred_weapons = weapon_type_explosive
		}
		modifier = {
			factor = 0.6
			exists = owner
			or = 
			{
				owner = { is_warrior_destructor = yes }
				owner = { is_dont_care = yes }
			}
		}
		
		
	}
}

#############################
# Auxiliary Fire-control    #
#############################

utility_component_template = {
	key = "FIRE_CONTROL_1"
	size = aux
	icon = "GFX_ship_part_computer_default"
	icon_frame = 1
	power = -10
	resources = {
		category = ship_components
		cost = {
			alloys = 10
		}
	}

	ship_modifier = {
		ship_accuracy_add = 5
	}

	prerequisites = { tech_auxiliary_fire_control }
	component_set = "FIRE_CONTROL_1"
	upgrades_to = "ESC_ADV_AUX_FIRE_CONTROL"

	ai_weight = {
		weight = 10 #30 #10
		modifier = {
			factor = 3.0
			is_preferred_weapons = weapon_type_kinetic
		}
	}
}

