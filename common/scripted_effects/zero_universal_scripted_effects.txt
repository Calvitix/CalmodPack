# I spent a lot of time on this mod out of my own free time, and nobody would like it if someone took their creation
# and stole it, and tried to claim it as thier's. If you want to learn to mod Stellaris, I'm not the best person to
# ask, but I'm always open to help and if you'd like to make new features or add-ons to this mod, send me a message,
# and we'll discuss together about either integrating them into this mod, or creating an add-on to this one.

#	Example:
#
#	example_effect = {
#		add_resource = { energy = -100 }
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

zero_choose_random_owned_species_for_leader = {
	if = {
        limit = {
            NOR = {
                has_authority = auth_machine_intelligence
                has_ascension_perk = ap_synthetic_evolution
                has_policy_flag = ai_full_rights
            }
        }
        random_owned_planet = {
            limit = { any_owned_pop = { NOR = { is_enslaved = yes is_being_purged = yes is_robot_pop = yes } } }
            random_owned_pop = {
                limit = { NOR = { is_enslaved = yes is_being_purged = yes is_robot_pop = yes } }
                species = { save_event_target_as = zero_random_species }
            }
        }
    }
    else = {
        random_owned_planet = {
            limit = { any_owned_pop = { NOR = { is_enslaved = yes is_being_purged = yes } } }
            random_owned_pop = {
                limit = { NOR = { is_enslaved = yes is_being_purged = yes } }
                species = { save_event_target_as = zero_random_species }
            }
        }
    }
}

zero_assign_prescripted_traits_for_leaders = {
    hidden_effect = {
        if = {
            limit = {
                last_created_leader = {
                    species = {
                        has_trait = trait_erudite
                        NOR = {
                            has_trait = trait_cybernetic
                            has_trait = trait_psionic
                            has_trait = trait_latent_psionic
                        }
                    }
                }
            }
            last_created_leader = {
                if = {
                    limit = { leader_class = admiral }
                    add_trait = leader_trait_admiral_erudite
                    add_ruler_trait = leader_trait_ruler_erudite
                    break = yes
                }
                if = {
                    limit = { leader_class = general }
                    add_trait = leader_trait_general_erudite
                    add_ruler_trait = leader_trait_ruler_erudite
                    break = yes
                }
                if = {
                    limit = { leader_class = governor }
                    add_trait = leader_trait_governor_erudite
                    add_ruler_trait = leader_trait_ruler_erudite
                    break = yes
                }
                if = {
                    limit = { leader_class = scientist }
                    add_trait = leader_trait_scientist_erudite
                    add_ruler_trait = leader_trait_ruler_erudite
                    break = yes
                }
                if = {
                    limit = { leader_class = ruler }
                    add_trait = leader_trait_ruler_erudite
                    add_ruler_trait = leader_trait_ruler_erudite
                    break = yes
                }
            }
        }
        if = {
            limit = {
                last_created_leader = {
                    species = { has_trait = trait_cybernetic }
                }
            }
            last_created_leader = {
                if = {
                    limit = { leader_class = admiral }
                    add_trait = leader_trait_admiral_cyborg
                    add_ruler_trait = leader_trait_ruler_cyborg
                    break = yes
                }
                if = {
                    limit = { leader_class = general }
                    add_trait = leader_trait_general_cyborg
                    add_ruler_trait = leader_trait_ruler_cyborg
                    break = yes
                }
                if = {
                    limit = { leader_class = governor }
                    add_trait = leader_trait_governor_cyborg
                    add_ruler_trait = leader_trait_ruler_cyborg
                    break = yes
                }
                if = {
                    limit = { leader_class = scientist }
                    add_trait = leader_trait_scientist_cyborg
                    add_ruler_trait = leader_trait_ruler_cyborg
                    break = yes
                }
                if = {
                    limit = { leader_class = ruler }
                    add_trait = leader_trait_ruler_cyborg
                    add_ruler_trait = leader_trait_ruler_cyborg
                    break = yes
                }
            }
        }
        if = {
            limit = {
                last_created_leader = {
                    species = { has_trait = trait_mechanical }
                }
            }
            last_created_leader = {
                if = {
                    limit = { leader_class = admiral }
                    add_trait = leader_trait_admiral_synthetic
                    add_ruler_trait = leader_trait_ruler_synthetic
                    break = yes
                }
                if = {
                    limit = { leader_class = general }
                    add_trait = leader_trait_general_synthetic
                    add_ruler_trait = leader_trait_ruler_synthetic
                    break = yes
                }
                if = {
                    limit = { leader_class = governor }
                    add_trait = leader_trait_governor_synthetic
                    add_ruler_trait = leader_trait_ruler_synthetic
                    break = yes
                }
                if = {
                    limit = { leader_class = scientist }
                    add_trait = leader_trait_scientist_synthetic
                    add_ruler_trait = leader_trait_ruler_synthetic
                    break = yes
                }
                if = {
                    limit = { leader_class = ruler }
                    add_trait = leader_trait_ruler_synthetic
                    add_ruler_trait = leader_trait_ruler_synthetic
                    break = yes
                }
            }
        }
        if = {
            limit = {
                last_created_leader = {
                    species = { has_trait = trait_psionic }
                }
            }
            last_created_leader = {
                if = {
                    limit = { leader_class = admiral }
                    add_trait = leader_trait_admiral_psionic
                    add_ruler_trait = leader_trait_ruler_psionic
                    break = yes
                }
                if = {
                    limit = { leader_class = general }
                    add_trait = leader_trait_general_psionic
                    add_ruler_trait = leader_trait_ruler_psionic
                    break = yes
                }
                if = {
                    limit = { leader_class = governor }
                    add_trait = leader_trait_governor_psionic
                    add_ruler_trait = leader_trait_ruler_psionic
                    break = yes
                }
                if = {
                    limit = { leader_class = scientist }
                    add_trait = leader_trait_scientist_psionic
                    add_ruler_trait = leader_trait_ruler_psionic
                    break = yes
                }
                if = {
                    limit = { leader_class = ruler }
                    add_trait = leader_trait_ruler_psionic
                    add_ruler_trait = leader_trait_ruler_psionic
                    break = yes
                }
            }
        }
    }
}