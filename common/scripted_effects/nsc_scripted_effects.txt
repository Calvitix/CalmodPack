nsc_flagship_creation_effect = {
	random_owned_megastructure = {
		limit = { is_megastructure_type = nsc_flagship_complete }
		save_event_target_as = nsc_flagship_spawn_location
	}
	create_fleet = {
		effect = {
			set_owner = root
			create_ship = {
				name = random
				random_existing_design = Flagship
				graphical_culture = root
			}
			set_location = event_target:nsc_flagship_spawn_location
		}
	}
}
nsc_flagship_creation_for_ai_effect = {
	if = {
		limit = { NOT = { has_technology = tech_bh_power_3 } }
		give_technology = { tech = tech_bh_power_3 message = no }
	}
	if = {
		limit = { NOT = { has_technology = tech_Flagship_1 } }
		give_technology = { tech = tech_Flagship_1 message = no }
	}
	create_fleet = {
		effect = {
			set_owner = prev
			create_ship = {
				name = random
				random_existing_design = Flagship
				graphical_culture = prev
			}
			set_location = prev.capital_scope.starbase
		}
	}
}
nsc_flagship_admiral_selection_effect = {
	while = {
		count = 10 #up to 10 leaders #then what if the player has more than that? #tell them to open this page again
		change_variable = {
			which = nsc_flagship_admiral_selection_target_count
			value = 1
		}
		random_owned_leader = {
			limit = {
				leader_class = admiral
				NOT = { has_leader_flag = nsc_flagship_admiral_selected_leader_flag }
			}
			if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 1 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_1 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 2 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_2 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 3 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_3 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 4 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_4 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 5 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_5 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 6 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_6 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 7 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_7 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 8 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_8 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 9 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_9 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
			else_if = {
				limit = { root = { check_variable = { which = nsc_flagship_admiral_selection_target_count value = 10 } } }
				save_event_target_as = nsc_flagship_admiral_selected_target_10 set_leader_flag = nsc_flagship_admiral_selected_leader_flag
			}
		}
	}
}
nsc_flagship_admiral_selection_costs_effect = {
	if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 1 } }
		add_resource = { energy = -200 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 2 } }
		add_resource = { energy = -400 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 3 } }
		add_resource = { energy = -600 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 4 } }
		add_resource = { energy = -800 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 5 } }
		add_resource = { energy = -1000 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 6 } }
		add_resource = { energy = -1200 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 7 } }
		add_resource = { energy = -1400 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 8 } }
		add_resource = { energy = -1600 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill = 9 } }
		add_resource = { energy = -1800 }
	}
	else_if = {
		limit = { event_target:nsc_flagship_admiral_selected_target = { has_skill >= 10 } }
		add_resource = { energy = -2000 }
	}
}
nsc_flagship_admiral_selection_clear_values_effect = {
	#clear the variable and the leader flag for later use
	set_variable = {
		which = nsc_flagship_admiral_selection_target_count
		value = 0
	}
	every_owned_leader = {
		limit = { has_leader_flag = nsc_flagship_admiral_selected_leader_flag }
		remove_leader_flag = nsc_flagship_admiral_selected_leader_flag
	}
}
nsc_modmenu_clear_ai_bonuses_effect = {
	switch = {
		trigger = has_global_flag
		nsc_modmenu_ai_bonus_1 = { remove_global_flag = nsc_modmenu_ai_bonus_1 }
		nsc_modmenu_ai_bonus_2 = { remove_global_flag = nsc_modmenu_ai_bonus_2 }
		nsc_modmenu_ai_bonus_3 = { remove_global_flag = nsc_modmenu_ai_bonus_3 }
		nsc_modmenu_ai_bonus_4 = { remove_global_flag = nsc_modmenu_ai_bonus_4 }
		nsc_modmenu_ai_bonus_5 = { remove_global_flag = nsc_modmenu_ai_bonus_5 }
	}
	switch = {
		trigger = has_modifier
		nsc_ai_bonus_1 = { remove_modifier = nsc_ai_bonus_1 }
		nsc_ai_bonus_2 = { remove_modifier = nsc_ai_bonus_2 }
		nsc_ai_bonus_3 = { remove_modifier = nsc_ai_bonus_3 }
		nsc_ai_bonus_4 = { remove_modifier = nsc_ai_bonus_4 }
		nsc_ai_bonus_5 = { remove_modifier = nsc_ai_bonus_5 }
	}
}
nsc_mothball_target_fleet_selecting_effect = {
	if = { #lock temporally selected targets so they can keep appear in event options until the player choose to close the window
		limit = { NOT = { has_planet_flag = nsc_mothball_target_fleets_counting_stopped } }
		while = {
			change_variable = { which = nsc_mothball_target_fleet_count_var value = 1 }
			random_fleet_in_orbit = {
				limit = {
					OR = {
						is_ship_class = shipclass_military
						is_ship_class = shipclass_military_special
						is_ship_size = juggernaut
					}
					#exclude already selected targets
					NOR = {
						has_fleet_flag = nsc_mothball_temporal_target_1
						has_fleet_flag = nsc_mothballed_fleet_1_owner_id_@this.owner
						has_fleet_flag = nsc_mothball_temporal_target_2
						has_fleet_flag = nsc_mothballed_fleet_2_owner_id_@this.owner
						has_fleet_flag = nsc_mothball_temporal_target_3
						has_fleet_flag = nsc_mothballed_fleet_3_owner_id_@this.owner
						has_fleet_flag = nsc_mothball_temporal_target_4
						has_fleet_flag = nsc_mothballed_fleet_4_owner_id_@this.owner
						has_fleet_flag = nsc_mothball_temporal_target_5
						has_fleet_flag = nsc_mothballed_fleet_5_owner_id_@this.owner
					}
				}
				if = {
					limit = {
						prev = {
							check_variable = { which = nsc_mothball_target_fleet_count_var value = 1 }
							NOT = {
								any_fleet_in_orbit = {
									OR = {
										has_fleet_flag = nsc_mothball_temporal_target_1
										has_fleet_flag = nsc_mothballed_fleet_1_owner_id_@this.owner
									}
								}
							}
						}
					}
					set_fleet_flag = nsc_mothball_temporal_target_1
				}
				else_if = {
					limit = {
						prev = {
							check_variable = { which = nsc_mothball_target_fleet_count_var value = 2 }
							NOT = {
								any_fleet_in_orbit = {
									OR = {
										has_fleet_flag = nsc_mothball_temporal_target_2
										has_fleet_flag = nsc_fleet_in_mothball_2_owner_id_@this.owner
									}
								}
							}
						}
					}
					set_fleet_flag = nsc_mothball_temporal_target_2
				}
				else_if = {
					limit = {
						prev = {
							check_variable = { which = nsc_mothball_target_fleet_count_var value = 3 }
							NOT = {
								any_fleet_in_orbit = {
									OR = {
										has_fleet_flag = nsc_mothball_temporal_target_3
										has_fleet_flag = nsc_fleet_in_mothball_3_owner_id_@this.owner
									}
								}
							}
						}
					}
					set_fleet_flag = nsc_mothball_temporal_target_3
				}
				else_if = {
					limit = {
						prev = {
							check_variable = { which = nsc_mothball_target_fleet_count_var value = 4 }
							NOT = {
								any_fleet_in_orbit = {
									OR = {
										has_fleet_flag = nsc_mothball_temporal_target_4
										has_fleet_flag = nsc_fleet_in_mothball_4_owner_id_@this.owner
									}
								}
							}
						}
					}
					set_fleet_flag = nsc_mothball_temporal_target_4
				}
				else_if = {
					limit = {
						prev = {
							check_variable = { which = nsc_mothball_target_fleet_count_var value = 5 }
							NOT = {
								any_fleet_in_orbit = {
									OR = {
										has_fleet_flag = nsc_mothball_temporal_target_5
										has_fleet_flag = nsc_fleet_in_mothball_5_owner_id_@this.owner
									}
								}
							}
						}
					}
					set_fleet_flag = nsc_mothball_temporal_target_5
				}
			}
			count = 5
		}
		clear_variable = nsc_mothball_target_fleet_count_var
		set_planet_flag = nsc_mothball_target_fleets_counting_stopped
	}
	random_fleet_in_orbit = {
		limit = {
			OR = {
				has_fleet_flag = nsc_mothball_temporal_target_1
				has_fleet_flag = nsc_mothballed_fleet_1_owner_id_@this.owner
			}
		}
		save_event_target_as = nsc_mothball_target_fleet_1
		every_owned_ship = {
			limit = {
				OR = {
					is_ship_class = shipclass_military
					is_ship_class = shipclass_military_special
					is_ship_size = juggernaut
				}
			}

			#this effect is NOT fully implemented yet #stellaris v3.0.3
			#export_trigger_value_to_variable = { trigger = has_hp variable = nsc_mothball_target_ship_cost_var }

			#this one is for testing and should be replaced to the above code
			set_variable = { which = nsc_mothball_target_ship_cost_var value = 500 }
			#so don't forget to change this, me!

			divide_variable = { which = nsc_mothball_target_ship_cost_var value = 5 } #100 / 5 = 20
			if = {
				limit = { check_variable = { which = nsc_mothball_target_ship_cost_var value > 5000 } }
				set_variable = { which = nsc_mothball_target_ship_cost_var value = 5000 }
			}
			prev.owner = {
				change_variable = {
					which = nsc_mothball_target_fleet_1_total_cost_var
					value = { scope = prev variable = nsc_mothball_target_ship_cost_var }
				}
			}
			clear_variable = nsc_mothball_target_ship_cost_var
		}
	}
	random_fleet_in_orbit = {
		limit = {
			OR = {
				has_fleet_flag = nsc_mothball_temporal_target_2
				has_fleet_flag = nsc_fleet_in_mothball_2_owner_id_@this.owner
			}
		}
		save_event_target_as = nsc_mothball_target_fleet_2
		every_owned_ship = {
			limit = {
				OR = {
					is_ship_class = shipclass_military
					is_ship_class = shipclass_military_special
					is_ship_size = juggernaut
				}
			}

			#this effect is NOT fully implemented yet #stellaris v3.0.3
			#export_trigger_value_to_variable = { trigger = has_hp variable = nsc_mothball_target_ship_cost_var }

			#this one is for testing and should be replaced to the above code
			set_variable = { which = nsc_mothball_target_ship_cost_var value = 500 }
			#so don't forget to change this, me!

			divide_variable = { which = nsc_mothball_target_ship_cost_var value = 5 } #100 / 5 = 20
			if = {
				limit = { check_variable = { which = nsc_mothball_target_ship_cost_var value > 5000 } }
				set_variable = { which = nsc_mothball_target_ship_cost_var value = 5000 }
			}
			prev.owner = {
				change_variable = {
					which = nsc_mothball_target_fleet_2_total_cost_var
					value = { scope = prev variable = nsc_mothball_target_ship_cost_var }
				}
			}
			clear_variable = nsc_mothball_target_ship_cost_var
		}
	}
	random_fleet_in_orbit = {
		limit = {
			OR = {
				has_fleet_flag = nsc_mothball_temporal_target_3
				has_fleet_flag = nsc_fleet_in_mothball_3_owner_id_@this.owner
			}
		}
		save_event_target_as = nsc_mothball_target_fleet_3
		every_owned_ship = {
			limit = {
				OR = {
					is_ship_class = shipclass_military
					is_ship_class = shipclass_military_special
					is_ship_size = juggernaut
				}
			}

			#this effect is NOT fully implemented yet #stellaris v3.0.3
			#export_trigger_value_to_variable = { trigger = has_hp variable = nsc_mothball_target_ship_cost_var }

			#this one is for testing and should be replaced to the above code
			set_variable = { which = nsc_mothball_target_ship_cost_var value = 500 }
			#so don't forget to change this, me!

			divide_variable = { which = nsc_mothball_target_ship_cost_var value = 5 } #100 / 5 = 20
			if = {
				limit = { check_variable = { which = nsc_mothball_target_ship_cost_var value > 5000 } }
				set_variable = { which = nsc_mothball_target_ship_cost_var value = 5000 }
			}
			prev.owner = {
				change_variable = {
					which = nsc_mothball_target_fleet_3_total_cost_var
					value = { scope = prev variable = nsc_mothball_target_ship_cost_var }
				}
			}
			clear_variable = nsc_mothball_target_ship_cost_var
		}
	}
	random_fleet_in_orbit = {
		limit = {
			OR = {
				has_fleet_flag = nsc_mothball_temporal_target_4
				has_fleet_flag = nsc_fleet_in_mothball_4_owner_id_@this.owner
			}
		}
		save_event_target_as = nsc_mothball_target_fleet_4
		every_owned_ship = {
			limit = {
				OR = {
					is_ship_class = shipclass_military
					is_ship_class = shipclass_military_special
					is_ship_size = juggernaut
				}
			}

			#this effect is NOT fully implemented yet #stellaris v3.0.3
			#export_trigger_value_to_variable = { trigger = has_hp variable = nsc_mothball_target_ship_cost_var }

			#this one is for testing and should be replaced to the above code
			set_variable = { which = nsc_mothball_target_ship_cost_var value = 500 }
			#so don't forget to change this, me!

			divide_variable = { which = nsc_mothball_target_ship_cost_var value = 5 } #100 / 5 = 20
			if = {
				limit = { check_variable = { which = nsc_mothball_target_ship_cost_var value > 5000 } }
				set_variable = { which = nsc_mothball_target_ship_cost_var value = 5000 }
			}
			prev.owner = {
				change_variable = {
					which = nsc_mothball_target_fleet_4_total_cost_var
					value = { scope = prev variable = nsc_mothball_target_ship_cost_var }
				}
			}
			clear_variable = nsc_mothball_target_ship_cost_var
		}
	}
	random_fleet_in_orbit = {
		limit = {
			OR = {
				has_fleet_flag = nsc_mothball_temporal_target_5
				has_fleet_flag = nsc_fleet_in_mothball_5_owner_id_@this.owner
			}
		}
		save_event_target_as = nsc_mothball_target_fleet_5
		every_owned_ship = {
			limit = {
				OR = {
					is_ship_class = shipclass_military
					is_ship_class = shipclass_military_special
					is_ship_size = juggernaut
				}
			}

			#this effect is NOT fully implemented yet #stellaris v3.0.3
			#export_trigger_value_to_variable = { trigger = has_hp variable = nsc_mothball_target_ship_cost_var }

			#this one is for testing and should be replaced to the above code
			set_variable = { which = nsc_mothball_target_ship_cost_var value = 500 }
			#so don't forget to change this, me!

			divide_variable = { which = nsc_mothball_target_ship_cost_var value = 5 } #100 / 5 = 20
			if = {
				limit = { check_variable = { which = nsc_mothball_target_ship_cost_var value > 5000 } }
				set_variable = { which = nsc_mothball_target_ship_cost_var value = 5000 }
			}
			prev.owner = {
				change_variable = {
					which = nsc_mothball_target_fleet_5_total_cost_var
					value = { scope = prev variable = nsc_mothball_target_ship_cost_var }
				}
			}
			clear_variable = nsc_mothball_target_ship_cost_var
		}
	}
}