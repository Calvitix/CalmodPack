# I spent a lot of time on this mod out of my own free time, and nobody would like it if someone took their creation
# and stole it, and tried to claim it as thier's. If you want to learn to mod Stellaris, I'm not the best person to
# ask, but I'm always open to help and if you'd like to make new features or add-ons to this mod, send me a message,
# and we'll discuss together about either integrating them into this mod, or creating an add-on to this one.

#	Example:
#
#	example_effect = {
#		add_resource = { energy = -100 }
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

distribute_five_random_infinity_stones_and_destroy_one = {
    remove_modifier = "infinity_stone_relic_activation_cooldown"
    hidden_effect = {
        remove_country_flag = gauntlet_in_use
    }
    random_list = {
        10 = { #POWER
            remove_relic = r_power_stone
            distribute_time_stone = yes
            distribute_reality_stone = yes
            distribute_soul_stone = yes
            distribute_mind_stone = yes
            distribute_space_stone = yes
        }
        10 = { #TIME
            remove_relic = r_time_stone
            distribute_power_stone = yes
            distribute_reality_stone = yes
            distribute_soul_stone = yes
            distribute_mind_stone = yes
            distribute_space_stone = yes
        }
        10 = { # REALITY
            remove_relic = r_reality_stone
            distribute_power_stone = yes
            distribute_time_stone = yes
            distribute_soul_stone = yes
            distribute_mind_stone = yes
            distribute_space_stone = yes
        }
        10 = { # SOUL
            remove_relic = r_soul_stone
            distribute_power_stone = yes
            distribute_time_stone = yes
            distribute_reality_stone = yes
            distribute_mind_stone = yes
            distribute_space_stone = yes
        }
        10 = { # MIND
            remove_relic = r_mind_stone
            distribute_power_stone = yes
            distribute_time_stone = yes
            distribute_reality_stone = yes
            distribute_soul_stone = yes
            distribute_space_stone = yes
        }
        10 = { # SPACE
            remove_relic = r_space_stone
            distribute_power_stone = yes
            distribute_time_stone = yes
            distribute_reality_stone = yes
            distribute_soul_stone = yes
            distribute_mind_stone = yes
        }
    }
    remove_infinity_stone_modifiers_on_stone_lost = yes
}


distribute_zero_infinity_stones_and_destroy_one = {
    remove_country_flag = gauntlet_in_use
    random_list = {
        10 = { #POWER
            remove_relic = r_power_stone
        }
        10 = { #TIME
            remove_relic = r_time_stone
        }
        10 = { # REALITY
            remove_relic = r_reality_stone
        }
        10 = { # SOUL
            remove_relic = r_soul_stone
        }
        10 = { # MIND
            remove_relic = r_mind_stone
        }
        10 = { # SPACE
            remove_relic = r_space_stone
        }
    }
    remove_infinity_stone_modifiers_on_stone_lost = yes
}

distribute_one_infinity_stone_and_destroy_five = {
    remove_relic = r_power_stone
    remove_relic = r_time_stone
    remove_relic = r_reality_stone
    remove_relic = r_soul_stone
    remove_relic = r_mind_stone
    remove_relic = r_space_stone
    #Generic
    remove_modifier = "infinity_stone_relic_activation_cooldown"
    set_country_flag = gauntlet_used_for_evil
    remove_country_flag = gauntlet_in_use
    random_list = {
        10 = { #POWER
            distribute_power_stone = yes
        }
        10 = { #TIME
            distribute_time_stone = yes
        }
        10 = { # REALITY
            distribute_reality_stone = yes
        }
        10 = { # SOUL
            distribute_soul_stone = yes
        }
        10 = { # MIND
            distribute_mind_stone = yes
        }
        10 = { # SPACE
            distribute_space_stone = yes
        }
    }
    remove_infinity_stone_modifiers_on_stone_lost = yes
}

destroy_six_infinity_stones = {
    remove_relic = r_power_stone
    remove_relic = r_time_stone
    remove_relic = r_reality_stone
    remove_relic = r_soul_stone
    remove_relic = r_mind_stone
    remove_relic = r_space_stone
    #Generic
    remove_modifier = "infinity_stone_relic_activation_cooldown"
    hidden_effect = {
        remove_country_flag = gauntlet_in_use
        remove_infinity_stone_modifiers_on_stone_lost = yes
    }
}

snap_ruler_death_chance = {
    random_list = {
        2 = {
            modifier = {
                add = 5
                ruler = {
                    has_trait = leader_trait_gauntlet_injured
                }
            }
            modifier = {
                add = 1
                ruler = {
                    species = { has_trait = trait_weak }
                }
            }
            kill_leader = {
                type = ruler
                show_notification = yes
            }
        }
        0 = {
            modifier = {
                add = 1
                ruler = {
                    has_trait = leader_trait_ruler_cyborg
                }
            }
            modifier = {
                add = 3
                ruler = {
                    has_trait = leader_trait_ruler_synthetic
                }
            }
            modifier = {
                add = 1
                ruler = {
                    species = { has_trait = trait_adaptive_lithoid }
                }
            }
            modifier = {
                add = 3
                ruler = {
                    species = { has_trait = trait_robust }
                }
            }
            modifier = { #rare
                add = 1
                ruler = {
                    species = { has_trait = trait_survivor }
                }
            }
            modifier = { #rare
                add = 1
                ruler = {
                    species = { has_trait = trait_bioadaptability }
                }
            }
            modifier = { #rare
                add = 1
                ruler = {
                    species = { has_trait = trait_limited_regeneration }
                }
            }
            modifier = {
                add = 1
                ruler = {
                    species = { has_trait = trait_adaptive }
                }
            }
            modifier = {
                add = 2
                ruler = {
                    species = { has_trait = trait_extremely_adaptive }
                }
            }
            modifier = {
                add = 1
                ruler = {
                    species = { has_trait = trait_strong }
                }
            }
            modifier = {
                add = 2
                ruler = {
                    species = { has_trait = trait_very_strong }
                }
            }
            modifier = {
                add = 2
                ruler = {
                    species = { has_trait = trait_robot_durable }
                }
            }
            modifier = {
                add = 1
                ruler = {
                    species = { has_trait = trait_enduring }
                }
            }
            modifier = {
                add = 2
                ruler = {
                    species = { has_trait = trait_venerable }
                }
            }
            modifier = {
                add = 3
                ruler = {
                    species = { has_trait = trait_resilient }
                }
            }
            modifier = {
                add = 3
                ruler = {
                    has_trait = leader_trait_ruler_psionic
                }
            }
            modifier = {
                add = 5
                ruler = {
                    has_trait = leader_trait_ruler_chosen
                }
            }
            modifier = {
                add = 5
                ruler = {
                    has_trait = leader_trait_admiral_space_stone_infused
                }
            }
            modifier = {
                add = 5
                ruler = {
                    has_trait = leader_trait_admiral_thor
                }
            }
            modifier = {
                add = 5
                ruler = {
                    has_trait = leader_trait_ruler_the_inevitable
                }
            }
            ruler = {
                add_trait = leader_trait_gauntlet_injured
            }
        }
    }
}

undo_the_snap = {
    every_country = {
        limit = {
            OR = {
                is_country_type = default
                is_country_type = fallen_empire
                is_country_type = awakened_fallen_empire
            }
        }
        every_owned_planet = {
            limit = { num_pops > 1 }
            save_event_target_as = current_unblip_planet
            every_owned_pop = {
                limit = { NOT = { has_pop_flag = ig_cloned_pop } }
                event_target:current_unblip_planet = {
                    create_pop = {
                        species = prev
                    }
                }
            }
        }
        remove_modifier = if_snapture_long
        remove_modifier = if_snapture_short
        country_event = { id = infinity_gauntlet.189 }
    }
    remove_global_flag = gauntlet_used_to_purge_pops
    remove_global_flag = can_undo_blip_with_gauntlet
}